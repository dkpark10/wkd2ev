{"version":3,"file":"commons-b31d82e5dbae97436097.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./node_modules/@deckdeckgo/highlight-code/dist/esm/index-55dc676f.js","webpack://gatsby-starter-blog/./node_modules/@deckdeckgo/highlight-code/dist/esm/ lazy ^\\.\\/.*\\.entry\\.js$ include: \\.entry\\.js$ exclude: \\.system\\.entry\\.js$ namespace object","webpack://gatsby-starter-blog/./node_modules/camelcase/index.js","webpack://gatsby-starter-blog/../src/image-utils.ts","webpack://gatsby-starter-blog/../src/components/hooks.ts","webpack://gatsby-starter-blog/../src/components/layout-wrapper.tsx","webpack://gatsby-starter-blog/../src/components/picture.tsx","webpack://gatsby-starter-blog/../src/components/placeholder.tsx","webpack://gatsby-starter-blog/../src/components/main-image.tsx","webpack://gatsby-starter-blog/../src/components/gatsby-image.server.tsx","webpack://gatsby-starter-blog/../src/components/gatsby-image.browser.tsx","webpack://gatsby-starter-blog/../src/components/static-image.server.tsx","webpack://gatsby-starter-blog/../src/components/static-image.tsx","webpack://gatsby-starter-blog/./node_modules/@deckdeckgo/highlight-code/dist/loader/index.js","webpack://gatsby-starter-blog/./src/components/layout.module.scss","webpack://gatsby-starter-blog/./src/store/index.js","webpack://gatsby-starter-blog/./src/store/dark-mode.js","webpack://gatsby-starter-blog/./node_modules/@deckdeckgo/highlight-code/dist/esm/loader.js","webpack://gatsby-starter-blog/./src/components/layout.jsx","webpack://gatsby-starter-blog/./src/components/seo.jsx"],"sourcesContent":["const NAMESPACE = 'deckdeckgo-highlight-code';\n\nlet scopeId;\nlet hostTagName;\nlet isSvgMode = false;\nlet queuePending = false;\nconst win = typeof window !== 'undefined' ? window : {};\nconst doc = win.document || { head: {} };\nconst plt = {\n    $flags$: 0,\n    $resourcesUrl$: '',\n    jmp: (h) => h(),\n    raf: (h) => requestAnimationFrame(h),\n    ael: (el, eventName, listener, opts) => el.addEventListener(eventName, listener, opts),\n    rel: (el, eventName, listener, opts) => el.removeEventListener(eventName, listener, opts),\n    ce: (eventName, opts) => new CustomEvent(eventName, opts),\n};\nconst promiseResolve = (v) => Promise.resolve(v);\nconst supportsConstructibleStylesheets = /*@__PURE__*/ (() => {\n        try {\n            new CSSStyleSheet();\n            return typeof new CSSStyleSheet().replace === 'function';\n        }\n        catch (e) { }\n        return false;\n    })()\n    ;\nconst addHostEventListeners = (elm, hostRef, listeners, attachParentListeners) => {\n    if (listeners) {\n        listeners.map(([flags, name, method]) => {\n            const target = getHostListenerTarget(elm, flags) ;\n            const handler = hostListenerProxy(hostRef, method);\n            const opts = hostListenerOpts(flags);\n            plt.ael(target, name, handler, opts);\n            (hostRef.$rmListeners$ = hostRef.$rmListeners$ || []).push(() => plt.rel(target, name, handler, opts));\n        });\n    }\n};\nconst hostListenerProxy = (hostRef, methodName) => (ev) => {\n    try {\n        {\n            if (hostRef.$flags$ & 256 /* isListenReady */) {\n                // instance is ready, let's call it's member method for this event\n                hostRef.$lazyInstance$[methodName](ev);\n            }\n            else {\n                (hostRef.$queuedListeners$ = hostRef.$queuedListeners$ || []).push([methodName, ev]);\n            }\n        }\n    }\n    catch (e) {\n        consoleError(e);\n    }\n};\nconst getHostListenerTarget = (elm, flags) => {\n    if (flags & 4 /* TargetDocument */)\n        return doc;\n    if (flags & 8 /* TargetWindow */)\n        return win;\n    return elm;\n};\n// prettier-ignore\nconst hostListenerOpts = (flags) => (flags & 2 /* Capture */) !== 0;\nconst HYDRATED_CSS = '{visibility:hidden}.hydrated{visibility:inherit}';\nconst XLINK_NS = 'http://www.w3.org/1999/xlink';\nconst createTime = (fnName, tagName = '') => {\n    {\n        return () => {\n            return;\n        };\n    }\n};\nconst uniqueTime = (key, measureText) => {\n    {\n        return () => {\n            return;\n        };\n    }\n};\nconst rootAppliedStyles = new WeakMap();\nconst registerStyle = (scopeId, cssText, allowCS) => {\n    let style = styles.get(scopeId);\n    if (supportsConstructibleStylesheets && allowCS) {\n        style = (style || new CSSStyleSheet());\n        style.replace(cssText);\n    }\n    else {\n        style = cssText;\n    }\n    styles.set(scopeId, style);\n};\nconst addStyle = (styleContainerNode, cmpMeta, mode, hostElm) => {\n    let scopeId = getScopeId(cmpMeta);\n    let style = styles.get(scopeId);\n    // if an element is NOT connected then getRootNode() will return the wrong root node\n    // so the fallback is to always use the document for the root node in those cases\n    styleContainerNode = styleContainerNode.nodeType === 11 /* DocumentFragment */ ? styleContainerNode : doc;\n    if (style) {\n        if (typeof style === 'string') {\n            styleContainerNode = styleContainerNode.head || styleContainerNode;\n            let appliedStyles = rootAppliedStyles.get(styleContainerNode);\n            let styleElm;\n            if (!appliedStyles) {\n                rootAppliedStyles.set(styleContainerNode, (appliedStyles = new Set()));\n            }\n            if (!appliedStyles.has(scopeId)) {\n                {\n                    {\n                        styleElm = doc.createElement('style');\n                        styleElm.innerHTML = style;\n                    }\n                    styleContainerNode.insertBefore(styleElm, styleContainerNode.querySelector('link'));\n                }\n                if (appliedStyles) {\n                    appliedStyles.add(scopeId);\n                }\n            }\n        }\n        else if (!styleContainerNode.adoptedStyleSheets.includes(style)) {\n            styleContainerNode.adoptedStyleSheets = [...styleContainerNode.adoptedStyleSheets, style];\n        }\n    }\n    return scopeId;\n};\nconst attachStyles = (hostRef) => {\n    const cmpMeta = hostRef.$cmpMeta$;\n    const elm = hostRef.$hostElement$;\n    const flags = cmpMeta.$flags$;\n    const endAttachStyles = createTime('attachStyles', cmpMeta.$tagName$);\n    const scopeId = addStyle(elm.shadowRoot ? elm.shadowRoot : elm.getRootNode(), cmpMeta);\n    if (flags & 10 /* needsScopedEncapsulation */) {\n        // only required when we're NOT using native shadow dom (slot)\n        // or this browser doesn't support native shadow dom\n        // and this host element was NOT created with SSR\n        // let's pick out the inner content for slot projection\n        // create a node to represent where the original\n        // content was first placed, which is useful later on\n        // DOM WRITE!!\n        elm['s-sc'] = scopeId;\n        elm.classList.add(scopeId + '-h');\n    }\n    endAttachStyles();\n};\nconst getScopeId = (cmp, mode) => 'sc-' + (cmp.$tagName$);\n/**\n * Default style mode id\n */\n/**\n * Reusable empty obj/array\n * Don't add values to these!!\n */\nconst EMPTY_OBJ = {};\nconst isDef = (v) => v != null;\nconst isComplexType = (o) => {\n    // https://jsperf.com/typeof-fn-object/5\n    o = typeof o;\n    return o === 'object' || o === 'function';\n};\n/**\n * Production h() function based on Preact by\n * Jason Miller (@developit)\n * Licensed under the MIT License\n * https://github.com/developit/preact/blob/master/LICENSE\n *\n * Modified for Stencil's compiler and vdom\n */\n// const stack: any[] = [];\n// export function h(nodeName: string | d.FunctionalComponent, vnodeData: d.PropsType, child?: d.ChildType): d.VNode;\n// export function h(nodeName: string | d.FunctionalComponent, vnodeData: d.PropsType, ...children: d.ChildType[]): d.VNode;\nconst h = (nodeName, vnodeData, ...children) => {\n    let child = null;\n    let key = null;\n    let simple = false;\n    let lastSimple = false;\n    let vNodeChildren = [];\n    const walk = (c) => {\n        for (let i = 0; i < c.length; i++) {\n            child = c[i];\n            if (Array.isArray(child)) {\n                walk(child);\n            }\n            else if (child != null && typeof child !== 'boolean') {\n                if ((simple = typeof nodeName !== 'function' && !isComplexType(child))) {\n                    child = String(child);\n                }\n                if (simple && lastSimple) {\n                    // If the previous child was simple (string), we merge both\n                    vNodeChildren[vNodeChildren.length - 1].$text$ += child;\n                }\n                else {\n                    // Append a new vNode, if it's text, we create a text vNode\n                    vNodeChildren.push(simple ? newVNode(null, child) : child);\n                }\n                lastSimple = simple;\n            }\n        }\n    };\n    walk(children);\n    if (vnodeData) {\n        // normalize class / classname attributes\n        if (vnodeData.key) {\n            key = vnodeData.key;\n        }\n        {\n            const classData = vnodeData.className || vnodeData.class;\n            if (classData) {\n                vnodeData.class =\n                    typeof classData !== 'object'\n                        ? classData\n                        : Object.keys(classData)\n                            .filter((k) => classData[k])\n                            .join(' ');\n            }\n        }\n    }\n    if (typeof nodeName === 'function') {\n        // nodeName is a functional component\n        return nodeName(vnodeData === null ? {} : vnodeData, vNodeChildren, vdomFnUtils);\n    }\n    const vnode = newVNode(nodeName, null);\n    vnode.$attrs$ = vnodeData;\n    if (vNodeChildren.length > 0) {\n        vnode.$children$ = vNodeChildren;\n    }\n    {\n        vnode.$key$ = key;\n    }\n    return vnode;\n};\nconst newVNode = (tag, text) => {\n    const vnode = {\n        $flags$: 0,\n        $tag$: tag,\n        $text$: text,\n        $elm$: null,\n        $children$: null,\n    };\n    {\n        vnode.$attrs$ = null;\n    }\n    {\n        vnode.$key$ = null;\n    }\n    return vnode;\n};\nconst Host = {};\nconst isHost = (node) => node && node.$tag$ === Host;\nconst vdomFnUtils = {\n    forEach: (children, cb) => children.map(convertToPublic).forEach(cb),\n    map: (children, cb) => children.map(convertToPublic).map(cb).map(convertToPrivate),\n};\nconst convertToPublic = (node) => ({\n    vattrs: node.$attrs$,\n    vchildren: node.$children$,\n    vkey: node.$key$,\n    vname: node.$name$,\n    vtag: node.$tag$,\n    vtext: node.$text$,\n});\nconst convertToPrivate = (node) => {\n    if (typeof node.vtag === 'function') {\n        const vnodeData = Object.assign({}, node.vattrs);\n        if (node.vkey) {\n            vnodeData.key = node.vkey;\n        }\n        if (node.vname) {\n            vnodeData.name = node.vname;\n        }\n        return h(node.vtag, vnodeData, ...(node.vchildren || []));\n    }\n    const vnode = newVNode(node.vtag, node.vtext);\n    vnode.$attrs$ = node.vattrs;\n    vnode.$children$ = node.vchildren;\n    vnode.$key$ = node.vkey;\n    vnode.$name$ = node.vname;\n    return vnode;\n};\n/**\n * Production setAccessor() function based on Preact by\n * Jason Miller (@developit)\n * Licensed under the MIT License\n * https://github.com/developit/preact/blob/master/LICENSE\n *\n * Modified for Stencil's compiler and vdom\n */\nconst setAccessor = (elm, memberName, oldValue, newValue, isSvg, flags) => {\n    if (oldValue !== newValue) {\n        let isProp = isMemberInElement(elm, memberName);\n        let ln = memberName.toLowerCase();\n        if (memberName === 'class') {\n            const classList = elm.classList;\n            const oldClasses = parseClassList(oldValue);\n            const newClasses = parseClassList(newValue);\n            classList.remove(...oldClasses.filter((c) => c && !newClasses.includes(c)));\n            classList.add(...newClasses.filter((c) => c && !oldClasses.includes(c)));\n        }\n        else if (memberName === 'style') {\n            // update style attribute, css properties and values\n            {\n                for (const prop in oldValue) {\n                    if (!newValue || newValue[prop] == null) {\n                        if (prop.includes('-')) {\n                            elm.style.removeProperty(prop);\n                        }\n                        else {\n                            elm.style[prop] = '';\n                        }\n                    }\n                }\n            }\n            for (const prop in newValue) {\n                if (!oldValue || newValue[prop] !== oldValue[prop]) {\n                    if (prop.includes('-')) {\n                        elm.style.setProperty(prop, newValue[prop]);\n                    }\n                    else {\n                        elm.style[prop] = newValue[prop];\n                    }\n                }\n            }\n        }\n        else if (memberName === 'key')\n            ;\n        else if (memberName === 'ref') {\n            // minifier will clean this up\n            if (newValue) {\n                newValue(elm);\n            }\n        }\n        else if ((!isProp ) &&\n            memberName[0] === 'o' &&\n            memberName[1] === 'n') {\n            // Event Handlers\n            // so if the member name starts with \"on\" and the 3rd characters is\n            // a capital letter, and it's not already a member on the element,\n            // then we're assuming it's an event listener\n            if (memberName[2] === '-') {\n                // on- prefixed events\n                // allows to be explicit about the dom event to listen without any magic\n                // under the hood:\n                // <my-cmp on-click> // listens for \"click\"\n                // <my-cmp on-Click> // listens for \"Click\"\n                // <my-cmp on-ionChange> // listens for \"ionChange\"\n                // <my-cmp on-EVENTS> // listens for \"EVENTS\"\n                memberName = memberName.slice(3);\n            }\n            else if (isMemberInElement(win, ln)) {\n                // standard event\n                // the JSX attribute could have been \"onMouseOver\" and the\n                // member name \"onmouseover\" is on the window's prototype\n                // so let's add the listener \"mouseover\", which is all lowercased\n                memberName = ln.slice(2);\n            }\n            else {\n                // custom event\n                // the JSX attribute could have been \"onMyCustomEvent\"\n                // so let's trim off the \"on\" prefix and lowercase the first character\n                // and add the listener \"myCustomEvent\"\n                // except for the first character, we keep the event name case\n                memberName = ln[2] + memberName.slice(3);\n            }\n            if (oldValue) {\n                plt.rel(elm, memberName, oldValue, false);\n            }\n            if (newValue) {\n                plt.ael(elm, memberName, newValue, false);\n            }\n        }\n        else {\n            // Set property if it exists and it's not a SVG\n            const isComplex = isComplexType(newValue);\n            if ((isProp || (isComplex && newValue !== null)) && !isSvg) {\n                try {\n                    if (!elm.tagName.includes('-')) {\n                        let n = newValue == null ? '' : newValue;\n                        // Workaround for Safari, moving the <input> caret when re-assigning the same valued\n                        if (memberName === 'list') {\n                            isProp = false;\n                        }\n                        else if (oldValue == null || elm[memberName] != n) {\n                            elm[memberName] = n;\n                        }\n                    }\n                    else {\n                        elm[memberName] = newValue;\n                    }\n                }\n                catch (e) { }\n            }\n            /**\n             * Need to manually update attribute if:\n             * - memberName is not an attribute\n             * - if we are rendering the host element in order to reflect attribute\n             * - if it's a SVG, since properties might not work in <svg>\n             * - if the newValue is null/undefined or 'false'.\n             */\n            let xlink = false;\n            {\n                if (ln !== (ln = ln.replace(/^xlink\\:?/, ''))) {\n                    memberName = ln;\n                    xlink = true;\n                }\n            }\n            if (newValue == null || newValue === false) {\n                if (newValue !== false || elm.getAttribute(memberName) === '') {\n                    if (xlink) {\n                        elm.removeAttributeNS(XLINK_NS, memberName);\n                    }\n                    else {\n                        elm.removeAttribute(memberName);\n                    }\n                }\n            }\n            else if ((!isProp || flags & 4 /* isHost */ || isSvg) && !isComplex) {\n                newValue = newValue === true ? '' : newValue;\n                if (xlink) {\n                    elm.setAttributeNS(XLINK_NS, memberName, newValue);\n                }\n                else {\n                    elm.setAttribute(memberName, newValue);\n                }\n            }\n        }\n    }\n};\nconst parseClassListRegex = /\\s/;\nconst parseClassList = (value) => (!value ? [] : value.split(parseClassListRegex));\nconst updateElement = (oldVnode, newVnode, isSvgMode, memberName) => {\n    // if the element passed in is a shadow root, which is a document fragment\n    // then we want to be adding attrs/props to the shadow root's \"host\" element\n    // if it's not a shadow root, then we add attrs/props to the same element\n    const elm = newVnode.$elm$.nodeType === 11 /* DocumentFragment */ && newVnode.$elm$.host\n        ? newVnode.$elm$.host\n        : newVnode.$elm$;\n    const oldVnodeAttrs = (oldVnode && oldVnode.$attrs$) || EMPTY_OBJ;\n    const newVnodeAttrs = newVnode.$attrs$ || EMPTY_OBJ;\n    {\n        // remove attributes no longer present on the vnode by setting them to undefined\n        for (memberName in oldVnodeAttrs) {\n            if (!(memberName in newVnodeAttrs)) {\n                setAccessor(elm, memberName, oldVnodeAttrs[memberName], undefined, isSvgMode, newVnode.$flags$);\n            }\n        }\n    }\n    // add new & update changed attributes\n    for (memberName in newVnodeAttrs) {\n        setAccessor(elm, memberName, oldVnodeAttrs[memberName], newVnodeAttrs[memberName], isSvgMode, newVnode.$flags$);\n    }\n};\nconst createElm = (oldParentVNode, newParentVNode, childIndex, parentElm) => {\n    // tslint:disable-next-line: prefer-const\n    let newVNode = newParentVNode.$children$[childIndex];\n    let i = 0;\n    let elm;\n    let childNode;\n    if (newVNode.$text$ !== null) {\n        // create text node\n        elm = newVNode.$elm$ = doc.createTextNode(newVNode.$text$);\n    }\n    else {\n        // create element\n        elm = newVNode.$elm$ = (doc.createElement(newVNode.$tag$));\n        // add css classes, attrs, props, listeners, etc.\n        {\n            updateElement(null, newVNode, isSvgMode);\n        }\n        if (isDef(scopeId) && elm['s-si'] !== scopeId) {\n            // if there is a scopeId and this is the initial render\n            // then let's add the scopeId as a css class\n            elm.classList.add((elm['s-si'] = scopeId));\n        }\n        if (newVNode.$children$) {\n            for (i = 0; i < newVNode.$children$.length; ++i) {\n                // create the node\n                childNode = createElm(oldParentVNode, newVNode, i);\n                // return node could have been null\n                if (childNode) {\n                    // append our new node\n                    elm.appendChild(childNode);\n                }\n            }\n        }\n    }\n    return elm;\n};\nconst addVnodes = (parentElm, before, parentVNode, vnodes, startIdx, endIdx) => {\n    let containerElm = (parentElm);\n    let childNode;\n    if (containerElm.shadowRoot && containerElm.tagName === hostTagName) {\n        containerElm = containerElm.shadowRoot;\n    }\n    for (; startIdx <= endIdx; ++startIdx) {\n        if (vnodes[startIdx]) {\n            childNode = createElm(null, parentVNode, startIdx);\n            if (childNode) {\n                vnodes[startIdx].$elm$ = childNode;\n                containerElm.insertBefore(childNode, before);\n            }\n        }\n    }\n};\nconst removeVnodes = (vnodes, startIdx, endIdx, vnode, elm) => {\n    for (; startIdx <= endIdx; ++startIdx) {\n        if ((vnode = vnodes[startIdx])) {\n            elm = vnode.$elm$;\n            callNodeRefs(vnode);\n            // remove the vnode's element from the dom\n            elm.remove();\n        }\n    }\n};\nconst updateChildren = (parentElm, oldCh, newVNode, newCh) => {\n    let oldStartIdx = 0;\n    let newStartIdx = 0;\n    let idxInOld = 0;\n    let i = 0;\n    let oldEndIdx = oldCh.length - 1;\n    let oldStartVnode = oldCh[0];\n    let oldEndVnode = oldCh[oldEndIdx];\n    let newEndIdx = newCh.length - 1;\n    let newStartVnode = newCh[0];\n    let newEndVnode = newCh[newEndIdx];\n    let node;\n    let elmToMove;\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n        if (oldStartVnode == null) {\n            // Vnode might have been moved left\n            oldStartVnode = oldCh[++oldStartIdx];\n        }\n        else if (oldEndVnode == null) {\n            oldEndVnode = oldCh[--oldEndIdx];\n        }\n        else if (newStartVnode == null) {\n            newStartVnode = newCh[++newStartIdx];\n        }\n        else if (newEndVnode == null) {\n            newEndVnode = newCh[--newEndIdx];\n        }\n        else if (isSameVnode(oldStartVnode, newStartVnode)) {\n            patch(oldStartVnode, newStartVnode);\n            oldStartVnode = oldCh[++oldStartIdx];\n            newStartVnode = newCh[++newStartIdx];\n        }\n        else if (isSameVnode(oldEndVnode, newEndVnode)) {\n            patch(oldEndVnode, newEndVnode);\n            oldEndVnode = oldCh[--oldEndIdx];\n            newEndVnode = newCh[--newEndIdx];\n        }\n        else if (isSameVnode(oldStartVnode, newEndVnode)) {\n            patch(oldStartVnode, newEndVnode);\n            parentElm.insertBefore(oldStartVnode.$elm$, oldEndVnode.$elm$.nextSibling);\n            oldStartVnode = oldCh[++oldStartIdx];\n            newEndVnode = newCh[--newEndIdx];\n        }\n        else if (isSameVnode(oldEndVnode, newStartVnode)) {\n            patch(oldEndVnode, newStartVnode);\n            parentElm.insertBefore(oldEndVnode.$elm$, oldStartVnode.$elm$);\n            oldEndVnode = oldCh[--oldEndIdx];\n            newStartVnode = newCh[++newStartIdx];\n        }\n        else {\n            // createKeyToOldIdx\n            idxInOld = -1;\n            {\n                for (i = oldStartIdx; i <= oldEndIdx; ++i) {\n                    if (oldCh[i] && oldCh[i].$key$ !== null && oldCh[i].$key$ === newStartVnode.$key$) {\n                        idxInOld = i;\n                        break;\n                    }\n                }\n            }\n            if (idxInOld >= 0) {\n                elmToMove = oldCh[idxInOld];\n                if (elmToMove.$tag$ !== newStartVnode.$tag$) {\n                    node = createElm(oldCh && oldCh[newStartIdx], newVNode, idxInOld);\n                }\n                else {\n                    patch(elmToMove, newStartVnode);\n                    oldCh[idxInOld] = undefined;\n                    node = elmToMove.$elm$;\n                }\n                newStartVnode = newCh[++newStartIdx];\n            }\n            else {\n                // new element\n                node = createElm(oldCh && oldCh[newStartIdx], newVNode, newStartIdx);\n                newStartVnode = newCh[++newStartIdx];\n            }\n            if (node) {\n                {\n                    oldStartVnode.$elm$.parentNode.insertBefore(node, oldStartVnode.$elm$);\n                }\n            }\n        }\n    }\n    if (oldStartIdx > oldEndIdx) {\n        addVnodes(parentElm, newCh[newEndIdx + 1] == null ? null : newCh[newEndIdx + 1].$elm$, newVNode, newCh, newStartIdx, newEndIdx);\n    }\n    else if (newStartIdx > newEndIdx) {\n        removeVnodes(oldCh, oldStartIdx, oldEndIdx);\n    }\n};\nconst isSameVnode = (vnode1, vnode2) => {\n    // compare if two vnode to see if they're \"technically\" the same\n    // need to have the same element tag, and same key to be the same\n    if (vnode1.$tag$ === vnode2.$tag$) {\n        {\n            return vnode1.$key$ === vnode2.$key$;\n        }\n    }\n    return false;\n};\nconst patch = (oldVNode, newVNode) => {\n    const elm = (newVNode.$elm$ = oldVNode.$elm$);\n    const oldChildren = oldVNode.$children$;\n    const newChildren = newVNode.$children$;\n    const tag = newVNode.$tag$;\n    const text = newVNode.$text$;\n    if (text === null) {\n        // element node\n        {\n            if (tag === 'slot')\n                ;\n            else {\n                // either this is the first render of an element OR it's an update\n                // AND we already know it's possible it could have changed\n                // this updates the element's css classes, attrs, props, listeners, etc.\n                updateElement(oldVNode, newVNode, isSvgMode);\n            }\n        }\n        if (oldChildren !== null && newChildren !== null) {\n            // looks like there's child vnodes for both the old and new vnodes\n            updateChildren(elm, oldChildren, newVNode, newChildren);\n        }\n        else if (newChildren !== null) {\n            // no old child vnodes, but there are new child vnodes to add\n            if (oldVNode.$text$ !== null) {\n                // the old vnode was text, so be sure to clear it out\n                elm.textContent = '';\n            }\n            // add the new vnode children\n            addVnodes(elm, null, newVNode, newChildren, 0, newChildren.length - 1);\n        }\n        else if (oldChildren !== null) {\n            // no new child vnodes, but there are old child vnodes to remove\n            removeVnodes(oldChildren, 0, oldChildren.length - 1);\n        }\n    }\n    else if (oldVNode.$text$ !== text) {\n        // update the text content for the text only vnode\n        // and also only if the text is different than before\n        elm.data = text;\n    }\n};\nconst callNodeRefs = (vNode) => {\n    {\n        vNode.$attrs$ && vNode.$attrs$.ref && vNode.$attrs$.ref(null);\n        vNode.$children$ && vNode.$children$.map(callNodeRefs);\n    }\n};\nconst renderVdom = (hostRef, renderFnResults) => {\n    const hostElm = hostRef.$hostElement$;\n    const cmpMeta = hostRef.$cmpMeta$;\n    const oldVNode = hostRef.$vnode$ || newVNode(null, null);\n    const rootVnode = isHost(renderFnResults) ? renderFnResults : h(null, null, renderFnResults);\n    hostTagName = hostElm.tagName;\n    if (cmpMeta.$attrsToReflect$) {\n        rootVnode.$attrs$ = rootVnode.$attrs$ || {};\n        cmpMeta.$attrsToReflect$.map(([propName, attribute]) => (rootVnode.$attrs$[attribute] = hostElm[propName]));\n    }\n    rootVnode.$tag$ = null;\n    rootVnode.$flags$ |= 4 /* isHost */;\n    hostRef.$vnode$ = rootVnode;\n    rootVnode.$elm$ = oldVNode.$elm$ = (hostElm.shadowRoot || hostElm );\n    {\n        scopeId = hostElm['s-sc'];\n    }\n    // synchronous patch\n    patch(oldVNode, rootVnode);\n};\nconst getElement = (ref) => (getHostRef(ref).$hostElement$ );\nconst createEvent = (ref, name, flags) => {\n    const elm = getElement(ref);\n    return {\n        emit: (detail) => {\n            return emitEvent(elm, name, {\n                bubbles: !!(flags & 4 /* Bubbles */),\n                composed: !!(flags & 2 /* Composed */),\n                cancelable: !!(flags & 1 /* Cancellable */),\n                detail,\n            });\n        },\n    };\n};\n/**\n * Helper function to create & dispatch a custom Event on a provided target\n * @param elm the target of the Event\n * @param name the name to give the custom Event\n * @param opts options for configuring a custom Event\n * @returns the custom Event\n */\nconst emitEvent = (elm, name, opts) => {\n    const ev = plt.ce(name, opts);\n    elm.dispatchEvent(ev);\n    return ev;\n};\nconst attachToAncestor = (hostRef, ancestorComponent) => {\n    if (ancestorComponent && !hostRef.$onRenderResolve$ && ancestorComponent['s-p']) {\n        ancestorComponent['s-p'].push(new Promise((r) => (hostRef.$onRenderResolve$ = r)));\n    }\n};\nconst scheduleUpdate = (hostRef, isInitialLoad) => {\n    {\n        hostRef.$flags$ |= 16 /* isQueuedForUpdate */;\n    }\n    if (hostRef.$flags$ & 4 /* isWaitingForChildren */) {\n        hostRef.$flags$ |= 512 /* needsRerender */;\n        return;\n    }\n    attachToAncestor(hostRef, hostRef.$ancestorComponent$);\n    // there is no ancestor component or the ancestor component\n    // has already fired off its lifecycle update then\n    // fire off the initial update\n    const dispatch = () => dispatchHooks(hostRef, isInitialLoad);\n    return writeTask(dispatch) ;\n};\nconst dispatchHooks = (hostRef, isInitialLoad) => {\n    const endSchedule = createTime('scheduleUpdate', hostRef.$cmpMeta$.$tagName$);\n    const instance = hostRef.$lazyInstance$ ;\n    let promise;\n    if (isInitialLoad) {\n        {\n            hostRef.$flags$ |= 256 /* isListenReady */;\n            if (hostRef.$queuedListeners$) {\n                hostRef.$queuedListeners$.map(([methodName, event]) => safeCall(instance, methodName, event));\n                hostRef.$queuedListeners$ = null;\n            }\n        }\n        {\n            promise = safeCall(instance, 'componentWillLoad');\n        }\n    }\n    endSchedule();\n    return then(promise, () => updateComponent(hostRef, instance, isInitialLoad));\n};\nconst updateComponent = async (hostRef, instance, isInitialLoad) => {\n    // updateComponent\n    const elm = hostRef.$hostElement$;\n    const endUpdate = createTime('update', hostRef.$cmpMeta$.$tagName$);\n    const rc = elm['s-rc'];\n    if (isInitialLoad) {\n        // DOM WRITE!\n        attachStyles(hostRef);\n    }\n    const endRender = createTime('render', hostRef.$cmpMeta$.$tagName$);\n    {\n        callRender(hostRef, instance);\n    }\n    if (rc) {\n        // ok, so turns out there are some child host elements\n        // waiting on this parent element to load\n        // let's fire off all update callbacks waiting\n        rc.map((cb) => cb());\n        elm['s-rc'] = undefined;\n    }\n    endRender();\n    endUpdate();\n    {\n        const childrenPromises = elm['s-p'];\n        const postUpdate = () => postUpdateComponent(hostRef);\n        if (childrenPromises.length === 0) {\n            postUpdate();\n        }\n        else {\n            Promise.all(childrenPromises).then(postUpdate);\n            hostRef.$flags$ |= 4 /* isWaitingForChildren */;\n            childrenPromises.length = 0;\n        }\n    }\n};\nconst callRender = (hostRef, instance, elm) => {\n    try {\n        instance = instance.render() ;\n        {\n            hostRef.$flags$ &= ~16 /* isQueuedForUpdate */;\n        }\n        {\n            hostRef.$flags$ |= 2 /* hasRendered */;\n        }\n        {\n            {\n                // looks like we've got child nodes to render into this host element\n                // or we need to update the css class/attrs on the host element\n                // DOM WRITE!\n                {\n                    renderVdom(hostRef, instance);\n                }\n            }\n        }\n    }\n    catch (e) {\n        consoleError(e, hostRef.$hostElement$);\n    }\n    return null;\n};\nconst postUpdateComponent = (hostRef) => {\n    const tagName = hostRef.$cmpMeta$.$tagName$;\n    const elm = hostRef.$hostElement$;\n    const endPostUpdate = createTime('postUpdate', tagName);\n    const instance = hostRef.$lazyInstance$ ;\n    const ancestorComponent = hostRef.$ancestorComponent$;\n    if (!(hostRef.$flags$ & 64 /* hasLoadedComponent */)) {\n        hostRef.$flags$ |= 64 /* hasLoadedComponent */;\n        {\n            // DOM WRITE!\n            addHydratedFlag(elm);\n        }\n        {\n            safeCall(instance, 'componentDidLoad');\n        }\n        endPostUpdate();\n        {\n            hostRef.$onReadyResolve$(elm);\n            if (!ancestorComponent) {\n                appDidLoad();\n            }\n        }\n    }\n    else {\n        {\n            safeCall(instance, 'componentDidUpdate');\n        }\n        endPostUpdate();\n    }\n    {\n        hostRef.$onInstanceResolve$(elm);\n    }\n    // load events fire from bottom to top\n    // the deepest elements load first then bubbles up\n    {\n        if (hostRef.$onRenderResolve$) {\n            hostRef.$onRenderResolve$();\n            hostRef.$onRenderResolve$ = undefined;\n        }\n        if (hostRef.$flags$ & 512 /* needsRerender */) {\n            nextTick(() => scheduleUpdate(hostRef, false));\n        }\n        hostRef.$flags$ &= ~(4 /* isWaitingForChildren */ | 512 /* needsRerender */);\n    }\n    // ( •_•)\n    // ( •_•)>⌐■-■\n    // (⌐■_■)\n};\nconst appDidLoad = (who) => {\n    // on appload\n    // we have finish the first big initial render\n    {\n        addHydratedFlag(doc.documentElement);\n    }\n    nextTick(() => emitEvent(win, 'appload', { detail: { namespace: NAMESPACE } }));\n};\nconst safeCall = (instance, method, arg) => {\n    if (instance && instance[method]) {\n        try {\n            return instance[method](arg);\n        }\n        catch (e) {\n            consoleError(e);\n        }\n    }\n    return undefined;\n};\nconst then = (promise, thenFn) => {\n    return promise && promise.then ? promise.then(thenFn) : thenFn();\n};\nconst addHydratedFlag = (elm) => elm.classList.add('hydrated')\n    ;\nconst parsePropertyValue = (propValue, propType) => {\n    // ensure this value is of the correct prop type\n    if (propValue != null && !isComplexType(propValue)) {\n        if (propType & 4 /* Boolean */) {\n            // per the HTML spec, any string value means it is a boolean true value\n            // but we'll cheat here and say that the string \"false\" is the boolean false\n            return propValue === 'false' ? false : propValue === '' || !!propValue;\n        }\n        if (propType & 1 /* String */) {\n            // could have been passed as a number or boolean\n            // but we still want it as a string\n            return String(propValue);\n        }\n        // redundant return here for better minification\n        return propValue;\n    }\n    // not sure exactly what type we want\n    // so no need to change to a different type\n    return propValue;\n};\nconst getValue = (ref, propName) => getHostRef(ref).$instanceValues$.get(propName);\nconst setValue = (ref, propName, newVal, cmpMeta) => {\n    // check our new property value against our internal value\n    const hostRef = getHostRef(ref);\n    const elm = hostRef.$hostElement$ ;\n    const oldVal = hostRef.$instanceValues$.get(propName);\n    const flags = hostRef.$flags$;\n    const instance = hostRef.$lazyInstance$ ;\n    newVal = parsePropertyValue(newVal, cmpMeta.$members$[propName][0]);\n    if ((!(flags & 8 /* isConstructingInstance */) || oldVal === undefined) && newVal !== oldVal) {\n        // gadzooks! the property's value has changed!!\n        // set our new value!\n        hostRef.$instanceValues$.set(propName, newVal);\n        if (instance) {\n            // get an array of method names of watch functions to call\n            if (cmpMeta.$watchers$ && flags & 128 /* isWatchReady */) {\n                const watchMethods = cmpMeta.$watchers$[propName];\n                if (watchMethods) {\n                    // this instance is watching for when this property changed\n                    watchMethods.map((watchMethodName) => {\n                        try {\n                            // fire off each of the watch methods that are watching this property\n                            instance[watchMethodName](newVal, oldVal, propName);\n                        }\n                        catch (e) {\n                            consoleError(e, elm);\n                        }\n                    });\n                }\n            }\n            if ((flags & (2 /* hasRendered */ | 16 /* isQueuedForUpdate */)) === 2 /* hasRendered */) {\n                // looks like this value actually changed, so we've got work to do!\n                // but only if we've already rendered, otherwise just chill out\n                // queue that we need to do an update, but don't worry about queuing\n                // up millions cuz this function ensures it only runs once\n                scheduleUpdate(hostRef, false);\n            }\n        }\n    }\n};\nconst proxyComponent = (Cstr, cmpMeta, flags) => {\n    if (cmpMeta.$members$) {\n        if (Cstr.watchers) {\n            cmpMeta.$watchers$ = Cstr.watchers;\n        }\n        // It's better to have a const than two Object.entries()\n        const members = Object.entries(cmpMeta.$members$);\n        const prototype = Cstr.prototype;\n        members.map(([memberName, [memberFlags]]) => {\n            if ((memberFlags & 31 /* Prop */ ||\n                    ((flags & 2 /* proxyState */) && memberFlags & 32 /* State */))) {\n                // proxyComponent - prop\n                Object.defineProperty(prototype, memberName, {\n                    get() {\n                        // proxyComponent, get value\n                        return getValue(this, memberName);\n                    },\n                    set(newValue) {\n                        // proxyComponent, set value\n                        setValue(this, memberName, newValue, cmpMeta);\n                    },\n                    configurable: true,\n                    enumerable: true,\n                });\n            }\n            else if (flags & 1 /* isElementConstructor */ &&\n                memberFlags & 64 /* Method */) {\n                // proxyComponent - method\n                Object.defineProperty(prototype, memberName, {\n                    value(...args) {\n                        const ref = getHostRef(this);\n                        return ref.$onInstancePromise$.then(() => ref.$lazyInstance$[memberName](...args));\n                    },\n                });\n            }\n        });\n        if ((flags & 1 /* isElementConstructor */)) {\n            const attrNameToPropName = new Map();\n            prototype.attributeChangedCallback = function (attrName, _oldValue, newValue) {\n                plt.jmp(() => {\n                    const propName = attrNameToPropName.get(attrName);\n                    //  In a web component lifecycle the attributeChangedCallback runs prior to connectedCallback\n                    //  in the case where an attribute was set inline.\n                    //  ```html\n                    //    <my-component some-attribute=\"some-value\"></my-component>\n                    //  ```\n                    //\n                    //  There is an edge case where a developer sets the attribute inline on a custom element and then\n                    //  programmatically changes it before it has been upgraded as shown below:\n                    //\n                    //  ```html\n                    //    <!-- this component has _not_ been upgraded yet -->\n                    //    <my-component id=\"test\" some-attribute=\"some-value\"></my-component>\n                    //    <script>\n                    //      // grab non-upgraded component\n                    //      el = document.querySelector(\"#test\");\n                    //      el.someAttribute = \"another-value\";\n                    //      // upgrade component\n                    //      customElements.define('my-component', MyComponent);\n                    //    </script>\n                    //  ```\n                    //  In this case if we do not unshadow here and use the value of the shadowing property, attributeChangedCallback\n                    //  will be called with `newValue = \"some-value\"` and will set the shadowed property (this.someAttribute = \"another-value\")\n                    //  to the value that was set inline i.e. \"some-value\" from above example. When\n                    //  the connectedCallback attempts to unshadow it will use \"some-value\" as the initial value rather than \"another-value\"\n                    //\n                    //  The case where the attribute was NOT set inline but was not set programmatically shall be handled/unshadowed\n                    //  by connectedCallback as this attributeChangedCallback will not fire.\n                    //\n                    //  https://developers.google.com/web/fundamentals/web-components/best-practices#lazy-properties\n                    //\n                    //  TODO(STENCIL-16) we should think about whether or not we actually want to be reflecting the attributes to\n                    //  properties here given that this goes against best practices outlined here\n                    //  https://developers.google.com/web/fundamentals/web-components/best-practices#avoid-reentrancy\n                    if (this.hasOwnProperty(propName)) {\n                        newValue = this[propName];\n                        delete this[propName];\n                    }\n                    else if (prototype.hasOwnProperty(propName) &&\n                        typeof this[propName] === 'number' &&\n                        this[propName] == newValue) {\n                        // if the propName exists on the prototype of `Cstr`, this update may be a result of Stencil using native\n                        // APIs to reflect props as attributes. Calls to `setAttribute(someElement, propName)` will result in\n                        // `propName` to be converted to a `DOMString`, which may not be what we want for other primitive props.\n                        return;\n                    }\n                    this[propName] = newValue === null && typeof this[propName] === 'boolean' ? false : newValue;\n                });\n            };\n            // create an array of attributes to observe\n            // and also create a map of html attribute name to js property name\n            Cstr.observedAttributes = members\n                .filter(([_, m]) => m[0] & 15 /* HasAttribute */) // filter to only keep props that should match attributes\n                .map(([propName, m]) => {\n                const attrName = m[1] || propName;\n                attrNameToPropName.set(attrName, propName);\n                if (m[0] & 512 /* ReflectAttr */) {\n                    cmpMeta.$attrsToReflect$.push([propName, attrName]);\n                }\n                return attrName;\n            });\n        }\n    }\n    return Cstr;\n};\nconst initializeComponent = async (elm, hostRef, cmpMeta, hmrVersionId, Cstr) => {\n    // initializeComponent\n    if ((hostRef.$flags$ & 32 /* hasInitializedComponent */) === 0) {\n        {\n            // we haven't initialized this element yet\n            hostRef.$flags$ |= 32 /* hasInitializedComponent */;\n            // lazy loaded components\n            // request the component's implementation to be\n            // wired up with the host element\n            Cstr = loadModule(cmpMeta);\n            if (Cstr.then) {\n                // Await creates a micro-task avoid if possible\n                const endLoad = uniqueTime();\n                Cstr = await Cstr;\n                endLoad();\n            }\n            if (!Cstr.isProxied) {\n                // we've never proxied this Constructor before\n                // let's add the getters/setters to its prototype before\n                // the first time we create an instance of the implementation\n                {\n                    cmpMeta.$watchers$ = Cstr.watchers;\n                }\n                proxyComponent(Cstr, cmpMeta, 2 /* proxyState */);\n                Cstr.isProxied = true;\n            }\n            const endNewInstance = createTime('createInstance', cmpMeta.$tagName$);\n            // ok, time to construct the instance\n            // but let's keep track of when we start and stop\n            // so that the getters/setters don't incorrectly step on data\n            {\n                hostRef.$flags$ |= 8 /* isConstructingInstance */;\n            }\n            // construct the lazy-loaded component implementation\n            // passing the hostRef is very important during\n            // construction in order to directly wire together the\n            // host element and the lazy-loaded instance\n            try {\n                new Cstr(hostRef);\n            }\n            catch (e) {\n                consoleError(e);\n            }\n            {\n                hostRef.$flags$ &= ~8 /* isConstructingInstance */;\n            }\n            {\n                hostRef.$flags$ |= 128 /* isWatchReady */;\n            }\n            endNewInstance();\n        }\n        if (Cstr.style) {\n            // this component has styles but we haven't registered them yet\n            let style = Cstr.style;\n            const scopeId = getScopeId(cmpMeta);\n            if (!styles.has(scopeId)) {\n                const endRegisterStyles = createTime('registerStyles', cmpMeta.$tagName$);\n                registerStyle(scopeId, style, !!(cmpMeta.$flags$ & 1 /* shadowDomEncapsulation */));\n                endRegisterStyles();\n            }\n        }\n    }\n    // we've successfully created a lazy instance\n    const ancestorComponent = hostRef.$ancestorComponent$;\n    const schedule = () => scheduleUpdate(hostRef, true);\n    if (ancestorComponent && ancestorComponent['s-rc']) {\n        // this is the initial load and this component it has an ancestor component\n        // but the ancestor component has NOT fired its will update lifecycle yet\n        // so let's just cool our jets and wait for the ancestor to continue first\n        // this will get fired off when the ancestor component\n        // finally gets around to rendering its lazy self\n        // fire off the initial update\n        ancestorComponent['s-rc'].push(schedule);\n    }\n    else {\n        schedule();\n    }\n};\nconst connectedCallback = (elm) => {\n    if ((plt.$flags$ & 1 /* isTmpDisconnected */) === 0) {\n        const hostRef = getHostRef(elm);\n        const cmpMeta = hostRef.$cmpMeta$;\n        const endConnected = createTime('connectedCallback', cmpMeta.$tagName$);\n        if (!(hostRef.$flags$ & 1 /* hasConnected */)) {\n            // first time this component has connected\n            hostRef.$flags$ |= 1 /* hasConnected */;\n            {\n                // find the first ancestor component (if there is one) and register\n                // this component as one of the actively loading child components for its ancestor\n                let ancestorComponent = elm;\n                while ((ancestorComponent = ancestorComponent.parentNode || ancestorComponent.host)) {\n                    // climb up the ancestors looking for the first\n                    // component that hasn't finished its lifecycle update yet\n                    if (ancestorComponent['s-p']) {\n                        // we found this components first ancestor component\n                        // keep a reference to this component's ancestor component\n                        attachToAncestor(hostRef, (hostRef.$ancestorComponent$ = ancestorComponent));\n                        break;\n                    }\n                }\n            }\n            // Lazy properties\n            // https://developers.google.com/web/fundamentals/web-components/best-practices#lazy-properties\n            if (cmpMeta.$members$) {\n                Object.entries(cmpMeta.$members$).map(([memberName, [memberFlags]]) => {\n                    if (memberFlags & 31 /* Prop */ && elm.hasOwnProperty(memberName)) {\n                        const value = elm[memberName];\n                        delete elm[memberName];\n                        elm[memberName] = value;\n                    }\n                });\n            }\n            {\n                initializeComponent(elm, hostRef, cmpMeta);\n            }\n        }\n        else {\n            // not the first time this has connected\n            // reattach any event listeners to the host\n            // since they would have been removed when disconnected\n            addHostEventListeners(elm, hostRef, cmpMeta.$listeners$);\n        }\n        endConnected();\n    }\n};\nconst disconnectedCallback = (elm) => {\n    if ((plt.$flags$ & 1 /* isTmpDisconnected */) === 0) {\n        const hostRef = getHostRef(elm);\n        {\n            if (hostRef.$rmListeners$) {\n                hostRef.$rmListeners$.map((rmListener) => rmListener());\n                hostRef.$rmListeners$ = undefined;\n            }\n        }\n    }\n};\nconst bootstrapLazy = (lazyBundles, options = {}) => {\n    const endBootstrap = createTime();\n    const cmpTags = [];\n    const exclude = options.exclude || [];\n    const customElements = win.customElements;\n    const head = doc.head;\n    const metaCharset = /*@__PURE__*/ head.querySelector('meta[charset]');\n    const visibilityStyle = /*@__PURE__*/ doc.createElement('style');\n    const deferredConnectedCallbacks = [];\n    let appLoadFallback;\n    let isBootstrapping = true;\n    Object.assign(plt, options);\n    plt.$resourcesUrl$ = new URL(options.resourcesUrl || './', doc.baseURI).href;\n    lazyBundles.map((lazyBundle) => {\n        lazyBundle[1].map((compactMeta) => {\n            const cmpMeta = {\n                $flags$: compactMeta[0],\n                $tagName$: compactMeta[1],\n                $members$: compactMeta[2],\n                $listeners$: compactMeta[3],\n            };\n            {\n                cmpMeta.$members$ = compactMeta[2];\n            }\n            {\n                cmpMeta.$listeners$ = compactMeta[3];\n            }\n            {\n                cmpMeta.$attrsToReflect$ = [];\n            }\n            {\n                cmpMeta.$watchers$ = {};\n            }\n            const tagName = cmpMeta.$tagName$;\n            const HostElement = class extends HTMLElement {\n                // StencilLazyHost\n                constructor(self) {\n                    // @ts-ignore\n                    super(self);\n                    self = this;\n                    registerHost(self, cmpMeta);\n                    if (cmpMeta.$flags$ & 1 /* shadowDomEncapsulation */) {\n                        // this component is using shadow dom\n                        // and this browser supports shadow dom\n                        // add the read-only property \"shadowRoot\" to the host element\n                        // adding the shadow root build conditionals to minimize runtime\n                        {\n                            {\n                                self.attachShadow({ mode: 'open' });\n                            }\n                        }\n                    }\n                }\n                connectedCallback() {\n                    if (appLoadFallback) {\n                        clearTimeout(appLoadFallback);\n                        appLoadFallback = null;\n                    }\n                    if (isBootstrapping) {\n                        // connectedCallback will be processed once all components have been registered\n                        deferredConnectedCallbacks.push(this);\n                    }\n                    else {\n                        plt.jmp(() => connectedCallback(this));\n                    }\n                }\n                disconnectedCallback() {\n                    plt.jmp(() => disconnectedCallback(this));\n                }\n                componentOnReady() {\n                    return getHostRef(this).$onReadyPromise$;\n                }\n            };\n            cmpMeta.$lazyBundleId$ = lazyBundle[0];\n            if (!exclude.includes(tagName) && !customElements.get(tagName)) {\n                cmpTags.push(tagName);\n                customElements.define(tagName, proxyComponent(HostElement, cmpMeta, 1 /* isElementConstructor */));\n            }\n        });\n    });\n    {\n        visibilityStyle.innerHTML = cmpTags + HYDRATED_CSS;\n        visibilityStyle.setAttribute('data-styles', '');\n        head.insertBefore(visibilityStyle, metaCharset ? metaCharset.nextSibling : head.firstChild);\n    }\n    // Process deferred connectedCallbacks now all components have been registered\n    isBootstrapping = false;\n    if (deferredConnectedCallbacks.length) {\n        deferredConnectedCallbacks.map((host) => host.connectedCallback());\n    }\n    else {\n        {\n            plt.jmp(() => (appLoadFallback = setTimeout(appDidLoad, 30)));\n        }\n    }\n    // Fallback appLoad event\n    endBootstrap();\n};\nconst hostRefs = new WeakMap();\nconst getHostRef = (ref) => hostRefs.get(ref);\nconst registerInstance = (lazyInstance, hostRef) => hostRefs.set((hostRef.$lazyInstance$ = lazyInstance), hostRef);\nconst registerHost = (elm, cmpMeta) => {\n    const hostRef = {\n        $flags$: 0,\n        $hostElement$: elm,\n        $cmpMeta$: cmpMeta,\n        $instanceValues$: new Map(),\n    };\n    {\n        hostRef.$onInstancePromise$ = new Promise((r) => (hostRef.$onInstanceResolve$ = r));\n    }\n    {\n        hostRef.$onReadyPromise$ = new Promise((r) => (hostRef.$onReadyResolve$ = r));\n        elm['s-p'] = [];\n        elm['s-rc'] = [];\n    }\n    addHostEventListeners(elm, hostRef, cmpMeta.$listeners$);\n    return hostRefs.set(elm, hostRef);\n};\nconst isMemberInElement = (elm, memberName) => memberName in elm;\nconst consoleError = (e, el) => (0, console.error)(e, el);\nconst cmpModules = /*@__PURE__*/ new Map();\nconst loadModule = (cmpMeta, hostRef, hmrVersionId) => {\n    // loadModuleImport\n    const exportName = cmpMeta.$tagName$.replace(/-/g, '_');\n    const bundleId = cmpMeta.$lazyBundleId$;\n    const module = cmpModules.get(bundleId) ;\n    if (module) {\n        return module[exportName];\n    }\n    return import(\n    /* webpackInclude: /\\.entry\\.js$/ */\n    /* webpackExclude: /\\.system\\.entry\\.js$/ */\n    /* webpackMode: \"lazy\" */\n    `./${bundleId}.entry.js${''}`).then((importedModule) => {\n        {\n            cmpModules.set(bundleId, importedModule);\n        }\n        return importedModule[exportName];\n    }, consoleError);\n};\nconst styles = new Map();\nconst queueDomReads = [];\nconst queueDomWrites = [];\nconst queueTask = (queue, write) => (cb) => {\n    queue.push(cb);\n    if (!queuePending) {\n        queuePending = true;\n        if (write && plt.$flags$ & 4 /* queueSync */) {\n            nextTick(flush);\n        }\n        else {\n            plt.raf(flush);\n        }\n    }\n};\nconst consume = (queue) => {\n    for (let i = 0; i < queue.length; i++) {\n        try {\n            queue[i](performance.now());\n        }\n        catch (e) {\n            consoleError(e);\n        }\n    }\n    queue.length = 0;\n};\nconst flush = () => {\n    // always force a bunch of medium callbacks to run, but still have\n    // a throttle on how many can run in a certain time\n    // DOM READS!!!\n    consume(queueDomReads);\n    // DOM WRITES!!!\n    {\n        consume(queueDomWrites);\n        if ((queuePending = queueDomReads.length > 0)) {\n            // still more to do yet, but we've run out of time\n            // let's let this thing cool off and try again in the next tick\n            plt.raf(flush);\n        }\n    }\n};\nconst nextTick = /*@__PURE__*/ (cb) => promiseResolve().then(cb);\nconst writeTask = /*@__PURE__*/ queueTask(queueDomWrites, true);\n\nexport { Host as H, bootstrapLazy as b, createEvent as c, getElement as g, h, promiseResolve as p, registerInstance as r };\n","var map = {\n\t\"./deckgo-highlight-code.entry.js\": [\n\t\t8929,\n\t\t929\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function() { return Object.keys(map); };\nwebpackAsyncContext.id = 9789;\nmodule.exports = webpackAsyncContext;","'use strict';\n\nconst UPPERCASE = /[\\p{Lu}]/u;\nconst LOWERCASE = /[\\p{Ll}]/u;\nconst LEADING_CAPITAL = /^[\\p{Lu}](?![\\p{Lu}])/gu;\nconst IDENTIFIER = /([\\p{Alpha}\\p{N}_]|$)/u;\nconst SEPARATORS = /[_.\\- ]+/;\n\nconst LEADING_SEPARATORS = new RegExp('^' + SEPARATORS.source);\nconst SEPARATORS_AND_IDENTIFIER = new RegExp(SEPARATORS.source + IDENTIFIER.source, 'gu');\nconst NUMBERS_AND_IDENTIFIER = new RegExp('\\\\d+' + IDENTIFIER.source, 'gu');\n\nconst preserveCamelCase = (string, toLowerCase, toUpperCase) => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && UPPERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && LOWERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = toLowerCase(character) === character && toUpperCase(character) !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = toUpperCase(character) === character && toLowerCase(character) !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst preserveConsecutiveUppercase = (input, toLowerCase) => {\n\tLEADING_CAPITAL.lastIndex = 0;\n\n\treturn input.replace(LEADING_CAPITAL, m1 => toLowerCase(m1));\n};\n\nconst postProcess = (input, toUpperCase) => {\n\tSEPARATORS_AND_IDENTIFIER.lastIndex = 0;\n\tNUMBERS_AND_IDENTIFIER.lastIndex = 0;\n\n\treturn input.replace(SEPARATORS_AND_IDENTIFIER, (_, identifier) => toUpperCase(identifier))\n\t\t.replace(NUMBERS_AND_IDENTIFIER, m => toUpperCase(m));\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = {\n\t\tpascalCase: false,\n\t\tpreserveConsecutiveUppercase: false,\n\t\t...options\n\t};\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tconst toLowerCase = options.locale === false ?\n\t\tstring => string.toLowerCase() :\n\t\tstring => string.toLocaleLowerCase(options.locale);\n\tconst toUpperCase = options.locale === false ?\n\t\tstring => string.toUpperCase() :\n\t\tstring => string.toLocaleUpperCase(options.locale);\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? toUpperCase(input) : toLowerCase(input);\n\t}\n\n\tconst hasUpperCase = input !== toLowerCase(input);\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input, toLowerCase, toUpperCase);\n\t}\n\n\tinput = input.replace(LEADING_SEPARATORS, '');\n\n\tif (options.preserveConsecutiveUppercase) {\n\t\tinput = preserveConsecutiveUppercase(input, toLowerCase);\n\t} else {\n\t\tinput = toLowerCase(input);\n\t}\n\n\tif (options.pascalCase) {\n\t\tinput = toUpperCase(input.charAt(0)) + input.slice(1);\n\t}\n\n\treturn postProcess(input, toUpperCase);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","import camelCase from \"camelcase\"\nimport type { IGatsbyImageData } from \"./index\"\n\nconst DEFAULT_PIXEL_DENSITIES = [0.25, 0.5, 1, 2]\nexport const DEFAULT_BREAKPOINTS = [750, 1080, 1366, 1920]\nexport const EVERY_BREAKPOINT = [\n  320, 654, 768, 1024, 1366, 1600, 1920, 2048, 2560, 3440, 3840, 4096,\n]\nconst DEFAULT_FLUID_WIDTH = 800\nconst DEFAULT_FIXED_WIDTH = 800\nconst DEFAULT_ASPECT_RATIO = 4 / 3\n\nexport type Fit = \"cover\" | \"fill\" | \"inside\" | \"outside\" | \"contain\"\n\nexport type Layout = \"fixed\" | \"fullWidth\" | \"constrained\"\nexport type ImageFormat = \"jpg\" | \"png\" | \"webp\" | \"avif\" | \"auto\" | \"\"\n\n/**\n * The minimal required reporter, as we don't want to import it from gatsby-cli\n */\nexport interface IReporter {\n  warn(message: string): void\n}\n\nexport interface ISharpGatsbyImageArgs {\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  placeholder?: \"tracedSVG\" | \"dominantColor\" | \"blurred\" | \"none\"\n  tracedSVGOptions?: Record<string, unknown>\n  width?: number\n  height?: number\n  aspectRatio?: number\n  sizes?: string\n  quality?: number\n  transformOptions?: {\n    fit?: Fit\n    cropFocus?: number | string\n    duotone?: {\n      highlight: string\n      shadow: string\n      opacity?: number\n    }\n    grayscale?: boolean\n    rotate?: number\n    trim?: number\n  }\n  jpgOptions?: Record<string, unknown>\n  pngOptions?: Record<string, unknown>\n  webpOptions?: Record<string, unknown>\n  avifOptions?: Record<string, unknown>\n  blurredOptions?: { width?: number; toFormat?: ImageFormat }\n  breakpoints?: Array<number>\n  outputPixelDensities?: Array<number>\n  backgroundColor?: string\n}\n\nexport interface IImageSizeArgs {\n  width?: number\n  height?: number\n  layout?: Layout\n  filename: string\n  outputPixelDensities?: Array<number>\n  breakpoints?: Array<number>\n  fit?: Fit\n  reporter?: IReporter\n  sourceMetadata: { width: number; height: number }\n}\n\nexport interface IImageSizes {\n  sizes: Array<number>\n  presentationWidth: number\n  presentationHeight: number\n  aspectRatio: number\n  unscaledWidth: number\n}\n\nexport interface IImage {\n  src: string\n  width: number\n  height: number\n  format: ImageFormat\n}\n\nexport interface IGatsbyImageHelperArgs {\n  pluginName: string\n  generateImageSource: (\n    filename: string,\n    width: number,\n    height: number,\n    format: ImageFormat,\n    fit?: Fit,\n    options?: Record<string, unknown>\n  ) => IImage\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  filename: string\n  placeholderURL?: string\n  width?: number\n  height?: number\n  sizes?: string\n  reporter?: IReporter\n  sourceMetadata?: { width: number; height: number; format: ImageFormat }\n  fit?: Fit\n  options?: Record<string, unknown>\n  breakpoints?: Array<number>\n  backgroundColor?: string\n  aspectRatio?: number\n}\n\nconst warn = (message: string): void => console.warn(message)\n\nconst sortNumeric = (a: number, b: number): number => a - b\n\nexport const getSizes = (width: number, layout: Layout): string | undefined => {\n  switch (layout) {\n    // If screen is wider than the max size, image width is the max size,\n    // otherwise it's the width of the screen\n    case `constrained`:\n      return `(min-width: ${width}px) ${width}px, 100vw`\n\n    // Image is always the same width, whatever the size of the screen\n    case `fixed`:\n      return `${width}px`\n\n    // Image is always the width of the screen\n    case `fullWidth`:\n      return `100vw`\n\n    default:\n      return undefined\n  }\n}\n\nexport const getSrcSet = (images: Array<IImage>): string =>\n  images.map(image => `${image.src} ${image.width}w`).join(`,\\n`)\n\nexport function formatFromFilename(filename: string): ImageFormat | undefined {\n  const dot = filename.lastIndexOf(`.`)\n  if (dot !== -1) {\n    const ext = filename.slice(dot + 1)\n    if (ext === `jpeg`) {\n      return `jpg`\n    }\n    if (ext.length === 3 || ext.length === 4) {\n      return ext as ImageFormat\n    }\n  }\n  return undefined\n}\n\nexport function setDefaultDimensions(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageHelperArgs {\n  let {\n    layout = `constrained`,\n    width,\n    height,\n    sourceMetadata,\n    breakpoints,\n    aspectRatio,\n    formats = [`auto`, `webp`],\n  } = args\n  formats = formats.map(format => format.toLowerCase() as ImageFormat)\n  layout = camelCase(layout) as Layout\n\n  if (width && height) {\n    return { ...args, formats, layout, aspectRatio: width / height }\n  }\n  if (sourceMetadata.width && sourceMetadata.height && !aspectRatio) {\n    aspectRatio = sourceMetadata.width / sourceMetadata.height\n  }\n\n  if (layout === `fullWidth`) {\n    width = width || sourceMetadata.width || breakpoints[breakpoints.length - 1]\n    height = height || Math.round(width / (aspectRatio || DEFAULT_ASPECT_RATIO))\n  } else {\n    if (!width) {\n      if (height && aspectRatio) {\n        width = height * aspectRatio\n      } else if (sourceMetadata.width) {\n        width = sourceMetadata.width\n      } else if (height) {\n        width = Math.round(height / DEFAULT_ASPECT_RATIO)\n      } else {\n        width = DEFAULT_FIXED_WIDTH\n      }\n    }\n\n    if (aspectRatio && !height) {\n      height = Math.round(width / aspectRatio)\n    } else if (!aspectRatio) {\n      aspectRatio = width / height\n    }\n  }\n  return { ...args, width, height, aspectRatio, layout, formats }\n}\n\n/**\n * Use this for getting an image for the blurred placeholder. This ensures the\n * aspect ratio and crop match the main image\n */\nexport function getLowResolutionImageURL(\n  args: IGatsbyImageHelperArgs,\n  width = 20\n): string {\n  args = setDefaultDimensions(args)\n  const { generateImageSource, filename, aspectRatio } = args\n  return generateImageSource(\n    filename,\n    width,\n    Math.round(width / aspectRatio),\n    args.sourceMetadata.format || `jpg`,\n    args.fit,\n    args.options\n  )?.src\n}\n\nexport function generateImageData(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageData {\n  args = setDefaultDimensions(args)\n\n  let {\n    pluginName,\n    sourceMetadata,\n    generateImageSource,\n    layout,\n    fit,\n    options,\n    width,\n    height,\n    filename,\n    reporter = { warn },\n    backgroundColor,\n    placeholderURL,\n  } = args\n\n  if (!pluginName) {\n    reporter.warn(\n      `[gatsby-plugin-image] \"generateImageData\" was not passed a plugin name`\n    )\n  }\n\n  if (typeof generateImageSource !== `function`) {\n    throw new Error(`generateImageSource must be a function`)\n  }\n\n  if (!sourceMetadata || (!sourceMetadata.width && !sourceMetadata.height)) {\n    // No metadata means we let the CDN handle max size etc, aspect ratio etc\n    sourceMetadata = {\n      width,\n      height,\n      format: sourceMetadata?.format || formatFromFilename(filename) || `auto`,\n    }\n  } else if (!sourceMetadata.format) {\n    sourceMetadata.format = formatFromFilename(filename)\n  }\n\n  const formats = new Set<ImageFormat>(args.formats)\n\n  if (formats.size === 0 || formats.has(`auto`) || formats.has(``)) {\n    formats.delete(`auto`)\n    formats.delete(``)\n    formats.add(sourceMetadata.format)\n  }\n\n  if (formats.has(`jpg`) && formats.has(`png`)) {\n    reporter.warn(\n      `[${pluginName}] Specifying both 'jpg' and 'png' formats is not supported. Using 'auto' instead`\n    )\n    if (sourceMetadata.format === `jpg`) {\n      formats.delete(`png`)\n    } else {\n      formats.delete(`jpg`)\n    }\n  }\n\n  const imageSizes = calculateImageSizes({ ...args, sourceMetadata })\n\n  const result: IGatsbyImageData[\"images\"] = {\n    sources: [],\n  }\n\n  let sizes = args.sizes\n  if (!sizes) {\n    sizes = getSizes(imageSizes.presentationWidth, layout)\n  }\n\n  formats.forEach(format => {\n    const images = imageSizes.sizes\n      .map(size => {\n        const imageSrc = generateImageSource(\n          filename,\n          size,\n          Math.round(size / imageSizes.aspectRatio),\n          format,\n          fit,\n          options\n        )\n        if (\n          !imageSrc?.width ||\n          !imageSrc.height ||\n          !imageSrc.src ||\n          !imageSrc.format\n        ) {\n          reporter.warn(\n            `[${pluginName}] The resolver for image ${filename} returned an invalid value.`\n          )\n          return undefined\n        }\n        return imageSrc\n      })\n      .filter(Boolean)\n\n    if (format === `jpg` || format === `png` || format === `auto`) {\n      const unscaled =\n        images.find(img => img.width === imageSizes.unscaledWidth) || images[0]\n\n      if (unscaled) {\n        result.fallback = {\n          src: unscaled.src,\n          srcSet: getSrcSet(images),\n          sizes,\n        }\n      }\n    } else {\n      result.sources?.push({\n        srcSet: getSrcSet(images),\n        sizes,\n        type: `image/${format}`,\n      })\n    }\n  })\n\n  const imageProps: Partial<IGatsbyImageData> = {\n    images: result,\n    layout,\n    backgroundColor,\n  }\n\n  if (placeholderURL) {\n    imageProps.placeholder = { fallback: placeholderURL }\n  }\n\n  switch (layout) {\n    case `fixed`:\n      imageProps.width = imageSizes.presentationWidth\n      imageProps.height = imageSizes.presentationHeight\n      break\n\n    case `fullWidth`:\n      imageProps.width = 1\n      imageProps.height = 1 / imageSizes.aspectRatio\n      break\n\n    case `constrained`:\n      imageProps.width = args.width || imageSizes.presentationWidth || 1\n      imageProps.height = (imageProps.width || 1) / imageSizes.aspectRatio\n  }\n\n  return imageProps as IGatsbyImageData\n}\n\nconst dedupeAndSortDensities = (values: Array<number>): Array<number> =>\n  Array.from(new Set([1, ...values])).sort(sortNumeric)\n\nexport function calculateImageSizes(args: IImageSizeArgs): IImageSizes {\n  const {\n    width,\n    height,\n    filename,\n    layout = `constrained`,\n    sourceMetadata: imgDimensions,\n    reporter = { warn },\n    breakpoints = DEFAULT_BREAKPOINTS,\n  } = args\n\n  // check that all dimensions provided are positive\n  const userDimensions = { width, height }\n  const erroneousUserDimensions = Object.entries(userDimensions).filter(\n    ([_, size]) => typeof size === `number` && size < 1\n  )\n  if (erroneousUserDimensions.length) {\n    throw new Error(\n      `Specified dimensions for images must be positive numbers (> 0). Problem dimensions you have are ${erroneousUserDimensions\n        .map(dim => dim.join(`: `))\n        .join(`, `)}`\n    )\n  }\n\n  if (layout === `fixed`) {\n    return fixedImageSizes(args)\n  } else if (layout === `constrained`) {\n    return responsiveImageSizes(args)\n  } else if (layout === `fullWidth`) {\n    return responsiveImageSizes({ breakpoints, ...args })\n  } else {\n    reporter.warn(\n      `No valid layout was provided for the image at ${filename}. Valid image layouts are fixed, fullWidth, and constrained. Found ${layout}`\n    )\n    return {\n      sizes: [imgDimensions.width],\n      presentationWidth: imgDimensions.width,\n      presentationHeight: imgDimensions.height,\n      aspectRatio: imgDimensions.width / imgDimensions.height,\n      unscaledWidth: imgDimensions.width,\n    }\n  }\n}\nexport function fixedImageSizes({\n  filename,\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  reporter = { warn },\n}: IImageSizeArgs): IImageSizes {\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  if (!width) {\n    if (!height) {\n      width = DEFAULT_FIXED_WIDTH\n    } else {\n      width = Math.round(height * aspectRatio)\n    }\n  } else if (!height) {\n    height = Math.round(width / aspectRatio)\n  }\n\n  const originalWidth = width // will use this for presentationWidth, don't want to lose it\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n\n  // If the image is smaller than requested, warn the user that it's being processed as such\n  // print out this message with the necessary information before we overwrite it for sizing\n  if (isTopSizeOverriden) {\n    const fixedDimension = imgDimensions.width < width ? `width` : `height`\n    reporter.warn(`\nThe requested ${fixedDimension} \"${\n      fixedDimension === `width` ? width : height\n    }px\" for the image ${filename} was larger than the actual image ${fixedDimension} of ${\n      imgDimensions[fixedDimension]\n    }px. If possible, replace the current image with a larger one.`)\n\n    if (fixedDimension === `width`) {\n      width = imgDimensions.width\n      height = Math.round(width / aspectRatio)\n    } else {\n      height = imgDimensions.height\n      width = height * aspectRatio\n    }\n  }\n\n  const sizes = densities\n    .filter(size => size >= 1) // remove smaller densities because fixed images don't need them\n    .map(density => Math.round(density * (width as number)))\n    .filter(size => size <= imgDimensions.width)\n\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function responsiveImageSizes({\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  breakpoints,\n  layout,\n}: IImageSizeArgs): IImageSizes {\n  let sizes\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  // Case 1: width of height were passed in, make sure it isn't larger than the actual image\n  width = width && Math.min(width, imgDimensions.width)\n  height = height && Math.min(height, imgDimensions.height)\n\n  // Case 2: neither width or height were passed in, use default size\n  if (!width && !height) {\n    width = Math.min(DEFAULT_FLUID_WIDTH, imgDimensions.width)\n    height = width / aspectRatio\n  }\n\n  // if it still hasn't been found, calculate width from the derived height.\n  // TS isn't smart enough to realise the type for height has been narrowed here\n  if (!width) {\n    width = (height as number) * aspectRatio\n  }\n\n  const originalWidth = width\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n  if (isTopSizeOverriden) {\n    width = imgDimensions.width\n    height = imgDimensions.height\n  }\n\n  width = Math.round(width)\n\n  if (breakpoints?.length > 0) {\n    sizes = breakpoints.filter(size => size <= imgDimensions.width)\n\n    // If a larger breakpoint has been filtered-out, add the actual image width instead\n    if (\n      sizes.length < breakpoints.length &&\n      !sizes.includes(imgDimensions.width)\n    ) {\n      sizes.push(imgDimensions.width)\n    }\n  } else {\n    sizes = densities.map(density => Math.round(density * (width as number)))\n    sizes = sizes.filter(size => size <= imgDimensions.width)\n  }\n\n  // ensure that the size passed in is included in the final output\n  if (layout === `constrained` && !sizes.includes(width)) {\n    sizes.push(width)\n  }\n  sizes = sizes.sort(sortNumeric)\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function getDimensionsAndAspectRatio(\n  dimensions,\n  options\n): { width: number; height: number; aspectRatio: number } {\n  // Calculate the eventual width/height of the image.\n  const imageAspectRatio = dimensions.width / dimensions.height\n\n  let width = options.width\n  let height = options.height\n\n  switch (options.fit) {\n    case `fill`: {\n      width = options.width ? options.width : dimensions.width\n      height = options.height ? options.height : dimensions.height\n      break\n    }\n    case `inside`: {\n      const widthOption = options.width\n        ? options.width\n        : Number.MAX_SAFE_INTEGER\n      const heightOption = options.height\n        ? options.height\n        : Number.MAX_SAFE_INTEGER\n\n      width = Math.min(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.min(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n    case `outside`: {\n      const widthOption = options.width ? options.width : 0\n      const heightOption = options.height ? options.height : 0\n\n      width = Math.max(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.max(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n\n    default: {\n      if (options.width && !options.height) {\n        width = options.width\n        height = Math.round(options.width / imageAspectRatio)\n      }\n\n      if (options.height && !options.width) {\n        width = Math.round(options.height * imageAspectRatio)\n        height = options.height\n      }\n    }\n  }\n\n  return {\n    width,\n    height,\n    aspectRatio: width / height,\n  }\n}\n","/* global GATSBY___IMAGE */\nimport { generateImageData, EVERY_BREAKPOINT } from \"../image-utils\"\nimport type { CSSProperties, HTMLAttributes, ImgHTMLAttributes } from \"react\"\nimport type { Node } from \"gatsby\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { IGatsbyImageData } from \"./gatsby-image.browser\"\nimport type {\n  IGatsbyImageHelperArgs,\n  Layout,\n  IImage,\n  ImageFormat,\n} from \"../image-utils\"\n\n// Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\nexport const hasNativeLazyLoadSupport = (): boolean =>\n  typeof HTMLImageElement !== `undefined` &&\n  `loading` in HTMLImageElement.prototype\n\nexport function gatsbyImageIsInstalled(): boolean {\n  return typeof GATSBY___IMAGE !== `undefined` && GATSBY___IMAGE\n}\n\nexport type IGatsbyImageDataParent<T = never> = T & {\n  gatsbyImageData: IGatsbyImageData\n}\nexport type IGatsbyImageParent<T = never> = T & {\n  gatsbyImage: IGatsbyImageData\n}\nexport type FileNode = Partial<Node> & {\n  childImageSharp?: IGatsbyImageDataParent<Partial<Node>>\n}\n\nconst isGatsbyImageData = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageData | any\n): node is IGatsbyImageData =>\n  // 🦆 check for a deep prop to be sure this is a valid gatsbyImageData object\n  Boolean(node?.images?.fallback?.src)\n\nconst isGatsbyImageDataParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageDataParent<T> | any\n): node is IGatsbyImageDataParent<T> => Boolean(node?.gatsbyImageData)\n\nconst isGatsbyImageParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageParent<T> | any\n): node is IGatsbyImageParent<T> => Boolean(node?.gatsbyImage)\n\nexport type ImageDataLike =\n  | FileNode\n  | IGatsbyImageDataParent\n  | IGatsbyImageParent\n  | IGatsbyImageData\n\nexport const getImage = (\n  node: ImageDataLike | null\n): IGatsbyImageData | undefined => {\n  // This checks both for gatsbyImageData and gatsbyImage\n  if (isGatsbyImageData(node)) {\n    return node\n  }\n  // gatsbyImageData GraphQL field\n  if (isGatsbyImageDataParent(node)) {\n    return node.gatsbyImageData\n  }\n  // gatsbyImage GraphQL field for Gatsby's Image CDN service\n  if (isGatsbyImageParent(node)) {\n    return node.gatsbyImage\n  }\n  return node?.childImageSharp?.gatsbyImageData\n}\n\nexport const getSrc = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.src\n\nexport const getSrcSet = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.srcSet\n\nexport function getWrapperProps(\n  width: number,\n  height: number,\n  layout: Layout\n): Pick<HTMLAttributes<HTMLElement>, \"className\" | \"style\"> & {\n  \"data-gatsby-image-wrapper\": string\n} {\n  const wrapperStyle: CSSProperties = {}\n\n  let className = `gatsby-image-wrapper`\n\n  // If the plugin isn't installed we need to apply the styles inline\n  if (!gatsbyImageIsInstalled()) {\n    wrapperStyle.position = `relative`\n    wrapperStyle.overflow = `hidden`\n  }\n\n  if (layout === `fixed`) {\n    wrapperStyle.width = width\n    wrapperStyle.height = height\n  } else if (layout === `constrained`) {\n    if (!gatsbyImageIsInstalled()) {\n      wrapperStyle.display = `inline-block`\n      wrapperStyle.verticalAlign = `top`\n    }\n    className = `gatsby-image-wrapper gatsby-image-wrapper-constrained`\n  }\n\n  return {\n    className,\n    \"data-gatsby-image-wrapper\": ``,\n    style: wrapperStyle,\n  }\n}\n\nexport interface IUrlBuilderArgs<OptionsType> {\n  width: number\n  height: number\n  baseUrl: string\n  format: ImageFormat\n  options: OptionsType\n}\nexport interface IGetImageDataArgs<OptionsType = Record<string, unknown>> {\n  baseUrl: string\n  /**\n   * For constrained and fixed images, the size of the image element\n   */\n  width?: number\n  height?: number\n  /**\n   * If available, pass the source image width and height\n   */\n  sourceWidth?: number\n  sourceHeight?: number\n  /**\n   * If only one dimension is passed, then this will be used to calculate the other.\n   */\n  aspectRatio?: number\n  layout?: Layout\n  /**\n   * Returns a URL based on the passed arguments. Should be a pure function\n   */\n  urlBuilder: (args: IUrlBuilderArgs<OptionsType>) => string\n\n  /**\n   * Should be a data URI\n   */\n  placeholderURL?: string\n  backgroundColor?: string\n  /**\n   * Used in error messages etc\n   */\n  pluginName?: string\n\n  /**\n   * If you do not support auto-format, pass an array of image types here\n   */\n  formats?: Array<ImageFormat>\n\n  breakpoints?: Array<number>\n\n  /**\n   * Passed to the urlBuilder function\n   */\n  options?: OptionsType\n}\n\n/**\n * Use this hook to generate gatsby-plugin-image data in the browser.\n */\nexport function getImageData<OptionsType>({\n  baseUrl,\n  urlBuilder,\n  sourceWidth,\n  sourceHeight,\n  pluginName = `getImageData`,\n  formats = [`auto`],\n  breakpoints,\n  options,\n  ...props\n}: IGetImageDataArgs<OptionsType>): IGatsbyImageData {\n  if (\n    !breakpoints?.length &&\n    (props.layout === `fullWidth` || (props.layout as string) === `FULL_WIDTH`)\n  ) {\n    breakpoints = EVERY_BREAKPOINT\n  }\n  const generateImageSource = (\n    baseUrl: string,\n    width: number,\n    height?: number,\n    format?: ImageFormat\n  ): IImage => {\n    return {\n      width,\n      height,\n      format,\n      src: urlBuilder({ baseUrl, width, height, options, format }),\n    }\n  }\n\n  const sourceMetadata: IGatsbyImageHelperArgs[\"sourceMetadata\"] = {\n    width: sourceWidth,\n    height: sourceHeight,\n    format: `auto`,\n  }\n\n  const args: IGatsbyImageHelperArgs = {\n    ...props,\n    pluginName,\n    generateImageSource,\n    filename: baseUrl,\n    formats,\n    breakpoints,\n    sourceMetadata,\n  }\n  return generateImageData(args)\n}\n\nexport function getMainProps(\n  isLoading: boolean,\n  isLoaded: boolean,\n  images: IGatsbyImageData[\"images\"],\n  loading?: \"eager\" | \"lazy\",\n  style: CSSProperties = {}\n): Partial<MainImageProps> {\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      transform: `translateZ(0)`,\n      transition: `opacity 250ms linear`,\n      width: `100%`,\n      willChange: `opacity`,\n      ...style,\n    }\n  }\n\n  const result = {\n    ...images,\n    loading,\n    shouldLoad: isLoading,\n    \"data-main-image\": ``,\n    style: {\n      ...style,\n      opacity: isLoaded ? 1 : 0,\n    },\n  }\n\n  return result\n}\n\nexport type PlaceholderImageAttrs = ImgHTMLAttributes<HTMLImageElement> &\n  Pick<PlaceholderProps, \"sources\" | \"fallback\"> & {\n    \"data-placeholder-image\"?: string\n  }\n\nexport function getPlaceholderProps(\n  placeholder: PlaceholderImageAttrs | undefined,\n  isLoaded: boolean,\n  layout: Layout,\n  width?: number,\n  height?: number,\n  backgroundColor?: string,\n  objectFit?: CSSProperties[\"objectFit\"],\n  objectPosition?: CSSProperties[\"objectPosition\"]\n): PlaceholderImageAttrs {\n  const wrapperStyle: CSSProperties = {}\n\n  if (backgroundColor) {\n    wrapperStyle.backgroundColor = backgroundColor\n\n    if (layout === `fixed`) {\n      wrapperStyle.width = width\n      wrapperStyle.height = height\n      wrapperStyle.backgroundColor = backgroundColor\n      wrapperStyle.position = `relative`\n    } else if (layout === `constrained`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    } else if (layout === `fullWidth`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    }\n  }\n\n  if (objectFit) {\n    wrapperStyle.objectFit = objectFit\n  }\n\n  if (objectPosition) {\n    wrapperStyle.objectPosition = objectPosition\n  }\n  const result: PlaceholderImageAttrs = {\n    ...placeholder,\n    \"aria-hidden\": true,\n    \"data-placeholder-image\": ``,\n    style: {\n      opacity: isLoaded ? 0 : 1,\n      transition: `opacity 500ms linear`,\n      ...wrapperStyle,\n    },\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    result.style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      width: `100%`,\n    }\n  }\n\n  return result\n}\n\nexport interface IArtDirectedImage {\n  media: string\n  image: IGatsbyImageData\n}\n\n/**\n * Generate a Gatsby image data object with multiple, art-directed images that display at different\n * resolutions.\n *\n * @param defaultImage The image displayed when no media query matches.\n * It is also used for all other settings applied to the image, such as width, height and layout.\n * You should pass a className to the component with media queries to adjust the size of the container,\n * as this cannot be adjusted automatically.\n * @param artDirected Array of objects which each contains a `media` string which is a media query\n * such as `(min-width: 320px)`, and the image object to use when that query matches.\n */\nexport function withArtDirection(\n  defaultImage: IGatsbyImageData,\n  artDirected: Array<IArtDirectedImage>\n): IGatsbyImageData {\n  const { images, placeholder, ...props } = defaultImage\n  const output: IGatsbyImageData = {\n    ...props,\n    images: {\n      ...images,\n      sources: [],\n    },\n    placeholder: placeholder && {\n      ...placeholder,\n      sources: [],\n    },\n  }\n\n  artDirected.forEach(({ media, image }) => {\n    if (!media) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(\n          \"[gatsby-plugin-image] All art-directed images passed to must have a value set for `media`. Skipping.\"\n        )\n      }\n      return\n    }\n\n    if (\n      image.layout !== defaultImage.layout &&\n      process.env.NODE_ENV === `development`\n    ) {\n      console.warn(\n        `[gatsby-plugin-image] Mismatched image layout: expected \"${defaultImage.layout}\" but received \"${image.layout}\". All art-directed images use the same layout as the default image`\n      )\n    }\n\n    output.images.sources.push(\n      ...image.images.sources.map(source => {\n        return { ...source, media }\n      }),\n      {\n        media,\n        srcSet: image.images.fallback.srcSet,\n      }\n    )\n\n    if (!output.placeholder) {\n      return\n    }\n\n    output.placeholder.sources.push({\n      media,\n      srcSet: image.placeholder.fallback,\n    })\n  })\n  output.images.sources.push(...images.sources)\n  if (placeholder?.sources) {\n    output.placeholder?.sources.push(...placeholder.sources)\n  }\n  return output\n}\n","import React, { Fragment, FunctionComponent, PropsWithChildren } from \"react\"\nimport terserMacro from \"../../macros/terser.macro\"\nimport { Layout } from \"../image-utils\"\n\nexport interface ILayoutWrapperProps {\n  layout: Layout\n  width: number\n  height: number\n}\n\nconst NativeScriptLoading: FunctionComponent = () => (\n  <script\n    type=\"module\"\n    dangerouslySetInnerHTML={{\n      __html: terserMacro`\nconst hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nif (hasNativeLazyLoadSupport) {\n  const gatsbyImages = document.querySelectorAll('img[data-main-image]');\n  for (let mainImage of gatsbyImages) {\n    if (mainImage.dataset.src) {\n      mainImage.setAttribute('src', mainImage.dataset.src)\n      mainImage.removeAttribute('data-src')\n    }\n    if (mainImage.dataset.srcset) {\n      mainImage.setAttribute('srcset', mainImage.dataset.srcset)\n      mainImage.removeAttribute('data-srcset')\n    }\n\n    const sources = mainImage.parentNode.querySelectorAll('source[data-srcset]');\n    for (let source of sources) {\n      source.setAttribute('srcset', source.dataset.srcset)\n      source.removeAttribute('data-srcset')\n    }\n\n    if (mainImage.complete) {\n      mainImage.style.opacity = 1;\n\n      // also hide the placeholder\n      mainImage.parentNode.parentNode.querySelector('[data-placeholder-image]').style.opacity = 0;\n    }\n  }\n}\n`,\n    }}\n  />\n)\n\nexport function getSizer(\n  layout: Layout,\n  width: number,\n  height: number\n): string {\n  let sizer = ``\n  if (layout === `fullWidth`) {\n    sizer = `<div aria-hidden=\"true\" style=\"padding-top: ${\n      (height / width) * 100\n    }%;\"></div>`\n  }\n\n  if (layout === `constrained`) {\n    sizer = `<div style=\"max-width: ${width}px; display: block;\"><img alt=\"\" role=\"presentation\" aria-hidden=\"true\" src=\"data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E\" style=\"max-width: 100%; display: block; position: static;\"></div>`\n  }\n\n  return sizer\n}\n\nconst Sizer: FunctionComponent<ILayoutWrapperProps> = function Sizer({\n  layout,\n  width,\n  height,\n}) {\n  if (layout === `fullWidth`) {\n    return (\n      <div aria-hidden style={{ paddingTop: `${(height / width) * 100}%` }} />\n    )\n  }\n\n  if (layout === `constrained`) {\n    return (\n      <div style={{ maxWidth: width, display: `block` }}>\n        <img\n          alt=\"\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          src={`data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E`}\n          style={{\n            maxWidth: `100%`,\n            display: `block`,\n            position: `static`,\n          }}\n        />\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport const LayoutWrapper: FunctionComponent<\n  PropsWithChildren<ILayoutWrapperProps>\n> = function LayoutWrapper({ children, ...props }) {\n  return (\n    <Fragment>\n      <Sizer {...props} />\n      {children}\n\n      {SERVER ? <NativeScriptLoading /> : null}\n    </Fragment>\n  )\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\n\nexport interface IResponsiveImageProps {\n  sizes?: string\n  srcSet: string\n}\n\nexport type SourceProps = IResponsiveImageProps &\n  (\n    | {\n        media: string\n        type?: string\n      }\n    | {\n        media?: string\n        type: string\n      }\n  )\n\ntype FallbackProps = { src: string } & Partial<IResponsiveImageProps>\n\ntype ImageProps = ImgHTMLAttributes<HTMLImageElement> & {\n  src: string\n  alt: string\n  shouldLoad: boolean\n}\n\nexport type PictureProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: FallbackProps\n  sources?: Array<SourceProps>\n  alt: string\n  shouldLoad?: boolean\n}\n\nconst Image: FunctionComponent<ImageProps> = function Image({\n  src,\n  srcSet,\n  loading,\n  alt = ``,\n  shouldLoad,\n  ...props\n}) {\n  return (\n    <img\n      {...props}\n      decoding=\"async\"\n      loading={loading}\n      src={shouldLoad ? src : undefined}\n      data-src={!shouldLoad ? src : undefined}\n      srcSet={shouldLoad ? srcSet : undefined}\n      data-srcset={!shouldLoad ? srcSet : undefined}\n      alt={alt}\n    />\n  )\n}\n\nexport const Picture: React.FC<PictureProps> = function Picture({\n  fallback,\n  sources = [],\n  shouldLoad = true,\n  ...props\n}) {\n  const sizes = props.sizes || fallback?.sizes\n  const fallbackImage = (\n    <Image {...props} {...fallback} sizes={sizes} shouldLoad={shouldLoad} />\n  )\n\n  if (!sources.length) {\n    return fallbackImage\n  }\n\n  return (\n    <picture>\n      {sources.map(({ media, srcSet, type }) => (\n        <source\n          key={`${media}-${type}-${srcSet}`}\n          type={type}\n          media={media}\n          srcSet={shouldLoad ? srcSet : undefined}\n          data-srcset={!shouldLoad ? srcSet : undefined}\n          sizes={sizes}\n        />\n      ))}\n      {fallbackImage}\n    </picture>\n  )\n}\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  srcSet: PropTypes.string,\n  shouldLoad: PropTypes.bool,\n}\n\nPicture.displayName = `Picture`\nPicture.propTypes = {\n  alt: PropTypes.string.isRequired,\n  shouldLoad: PropTypes.bool,\n  fallback: PropTypes.exact({\n    src: PropTypes.string.isRequired,\n    srcSet: PropTypes.string,\n    sizes: PropTypes.string,\n  }),\n  sources: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.exact({\n        media: PropTypes.string.isRequired,\n        type: PropTypes.string,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n      PropTypes.exact({\n        media: PropTypes.string,\n        type: PropTypes.string.isRequired,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n    ])\n  ),\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\nimport { Picture, SourceProps } from \"./picture\"\n\nexport type PlaceholderProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: string\n  sources?: Array<SourceProps>\n}\n\nexport const Placeholder: FunctionComponent<PlaceholderProps> =\n  function Placeholder({ fallback, ...props }) {\n    if (fallback) {\n      return (\n        <Picture\n          {...props}\n          fallback={{\n            src: fallback,\n          }}\n          aria-hidden\n          alt=\"\"\n        />\n      )\n    } else {\n      return <div {...props}></div>\n    }\n  }\n\nPlaceholder.displayName = `Placeholder`\nPlaceholder.propTypes = {\n  fallback: PropTypes.string,\n  sources: Picture.propTypes?.sources,\n  alt: function (props, propName, componentName): Error | null {\n    if (!props[propName]) {\n      return null\n    }\n\n    return new Error(\n      `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Validation failed.`\n    )\n  },\n}\n","import React from \"react\"\nimport { Picture, PictureProps } from \"./picture\"\n\nexport type MainImageProps = PictureProps\n\nexport const MainImage: React.FC<PictureProps> = function MainImage(props) {\n  return (\n    <>\n      <Picture {...props} />\n      <noscript>\n        <Picture {...props} shouldLoad={true} />\n      </noscript>\n    </>\n  )\n}\n\nMainImage.displayName = `MainImage`\nMainImage.propTypes = Picture.propTypes\n","import React from \"react\"\nimport { getWrapperProps, getMainProps, getPlaceholderProps } from \"./hooks\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImage, MainImageProps } from \"./main-image\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport PropTypes from \"prop-types\"\nimport type { FunctionComponent, WeakValidationMap } from \"react\"\nimport type { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\n\nconst removeNewLines = (str: string): string => str.replace(/\\n/g, ``)\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> =\n  function GatsbyImage({\n    as = `div`,\n    className,\n    class: preactClass,\n    style,\n    image,\n    loading = `lazy`,\n    imgClassName,\n    imgStyle,\n    backgroundColor,\n    objectFit,\n    objectPosition,\n    ...props\n  }) {\n    if (!image) {\n      console.warn(`[gatsby-plugin-image] Missing image prop`)\n      return null\n    }\n\n    if (preactClass) {\n      className = preactClass\n    }\n\n    imgStyle = {\n      objectFit,\n      objectPosition,\n      backgroundColor,\n      ...imgStyle,\n    }\n\n    const {\n      width,\n      height,\n      layout,\n      images,\n      placeholder,\n      backgroundColor: placeholderBackgroundColor,\n    } = image\n\n    const {\n      style: wStyle,\n      className: wClass,\n      ...wrapperProps\n    } = getWrapperProps(width, height, layout)\n\n    const cleanedImages: IGatsbyImageData[\"images\"] = {\n      fallback: undefined,\n      sources: [],\n    }\n    if (images.fallback) {\n      cleanedImages.fallback = {\n        ...images.fallback,\n        srcSet: images.fallback.srcSet\n          ? removeNewLines(images.fallback.srcSet)\n          : undefined,\n      }\n    }\n\n    if (images.sources) {\n      cleanedImages.sources = images.sources.map(source => {\n        return {\n          ...source,\n          srcSet: removeNewLines(source.srcSet),\n        }\n      })\n    }\n\n    return React.createElement(\n      as,\n      {\n        ...wrapperProps,\n        style: {\n          ...wStyle,\n          ...style,\n          backgroundColor,\n        },\n        className: `${wClass}${className ? ` ${className}` : ``}`,\n      },\n      <LayoutWrapper layout={layout} width={width} height={height}>\n        <Placeholder\n          {...getPlaceholderProps(\n            placeholder,\n            false,\n            layout,\n            width,\n            height,\n            placeholderBackgroundColor,\n            objectFit,\n            objectPosition\n          )}\n        />\n\n        <MainImage\n          data-gatsby-image-ssr=\"\"\n          className={imgClassName}\n          {...(props as Omit<\n            MainImageProps,\n            \"images\" | \"fallback\" | \"onError\" | \"onLoad\"\n          >)}\n          // When eager is set we want to start the isLoading state on true (we want to load the img without react)\n          {...getMainProps(\n            loading === `eager`,\n            false,\n            cleanedImages,\n            loading,\n            imgStyle\n          )}\n        />\n      </LayoutWrapper>\n    )\n  }\n\nexport const altValidator: PropTypes.Validator<string> = (\n  props: GatsbyImageProps,\n  propName,\n  componentName,\n  ...rest\n): Error | undefined => {\n  if (!props.alt && props.alt !== ``) {\n    return new Error(\n      `The \"alt\" prop is required in ${componentName}. If the image is purely presentational then pass an empty string: e.g. alt=\"\". Learn more: https://a11y-style-guide.com/style-guide/section-media.html`\n    )\n  }\n\n  return PropTypes.string(props, propName, componentName, ...rest)\n}\n\nexport const propTypes = {\n  image: PropTypes.object.isRequired,\n  alt: altValidator,\n} as WeakValidationMap<GatsbyImageProps>\n","import {\n  createElement,\n  memo,\n  useMemo,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n} from \"react\"\nimport {\n  getWrapperProps,\n  gatsbyImageIsInstalled,\n  hasNativeLazyLoadSupport,\n} from \"./hooks\"\nimport { getSizer } from \"./layout-wrapper\"\nimport { propTypes } from \"./gatsby-image.server\"\nimport type {\n  FC,\n  ElementType,\n  FunctionComponent,\n  ImgHTMLAttributes,\n  CSSProperties,\n  ReactEventHandler,\n} from \"react\"\nimport type { renderImageToString } from \"./lazy-hydrate\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { Layout } from \"../image-utils\"\n\nconst imageCache = new Set<string>()\nlet renderImageToStringPromise\nlet renderImage: typeof renderImageToString | undefined\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface GatsbyImageProps\n  extends Omit<\n    ImgHTMLAttributes<HTMLImageElement>,\n    \"placeholder\" | \"onLoad\" | \"src\" | \"srcSet\" | \"width\" | \"height\"\n  > {\n  alt: string\n  as?: ElementType\n  className?: string\n  class?: string\n  imgClassName?: string\n  image: IGatsbyImageData\n  imgStyle?: CSSProperties\n  backgroundColor?: string\n  objectFit?: CSSProperties[\"objectFit\"]\n  objectPosition?: CSSProperties[\"objectPosition\"]\n  onLoad?: (props: { wasCached: boolean }) => void\n  onError?: ReactEventHandler<HTMLImageElement>\n  onStartLoad?: (props: { wasCached: boolean }) => void\n}\n\nexport interface IGatsbyImageData {\n  layout: Layout\n  width: number\n  height: number\n  backgroundColor?: string\n  images: Pick<MainImageProps, \"sources\" | \"fallback\">\n  placeholder?: Pick<PlaceholderProps, \"sources\" | \"fallback\">\n}\n\nconst GatsbyImageHydrator: FC<GatsbyImageProps> = function GatsbyImageHydrator({\n  as = `div`,\n  image,\n  style,\n  backgroundColor,\n  className,\n  class: preactClass,\n  onStartLoad,\n  onLoad,\n  onError,\n  ...props\n}) {\n  const { width, height, layout } = image\n  const {\n    style: wStyle,\n    className: wClass,\n    ...wrapperProps\n  } = getWrapperProps(width, height, layout)\n  const root = useRef<HTMLElement>()\n  const cacheKey = useMemo(() => JSON.stringify(image.images), [image.images])\n\n  // Preact uses class instead of className so we need to check for both\n  if (preactClass) {\n    className = preactClass\n  }\n\n  const sizer = getSizer(layout, width, height)\n\n  useEffect(() => {\n    if (!renderImageToStringPromise) {\n      renderImageToStringPromise = import(`./lazy-hydrate`).then(\n        ({ renderImageToString, swapPlaceholderImage }) => {\n          renderImage = renderImageToString\n\n          return {\n            renderImageToString,\n            swapPlaceholderImage,\n          }\n        }\n      )\n    }\n\n    // The plugin image component is a bit special where if it's server-side rendered, we add extra script tags to support lazy-loading without\n    // In this case we stop hydration but fire the correct events.\n    const ssrImage = root.current.querySelector(\n      `[data-gatsby-image-ssr]`\n    ) as HTMLImageElement\n    if (ssrImage && hasNativeLazyLoadSupport()) {\n      if (ssrImage.complete) {\n        // Trigger onStartload and onLoad events\n        onStartLoad?.({\n          wasCached: true,\n        })\n        onLoad?.({\n          wasCached: true,\n        })\n\n        // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n        setTimeout(() => {\n          ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n        }, 0)\n      } else {\n        onStartLoad?.({\n          wasCached: true,\n        })\n\n        ssrImage.addEventListener(`load`, function onLoadListener() {\n          ssrImage.removeEventListener(`load`, onLoadListener)\n\n          onLoad?.({\n            wasCached: true,\n          })\n          // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n          setTimeout(() => {\n            ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n          }, 0)\n        })\n      }\n\n      imageCache.add(cacheKey)\n\n      return\n    }\n\n    if (renderImage && imageCache.has(cacheKey)) {\n      return\n    }\n\n    let animationFrame\n    let cleanupCallback\n    renderImageToStringPromise.then(\n      ({ renderImageToString, swapPlaceholderImage }) => {\n        if (!root.current) {\n          return\n        }\n\n        root.current.innerHTML = renderImageToString({\n          isLoading: true,\n          isLoaded: imageCache.has(cacheKey),\n          image,\n          ...props,\n        })\n\n        if (!imageCache.has(cacheKey)) {\n          animationFrame = requestAnimationFrame(() => {\n            if (root.current) {\n              cleanupCallback = swapPlaceholderImage(\n                root.current,\n                cacheKey,\n                imageCache,\n                style,\n                onStartLoad,\n                onLoad,\n                onError\n              )\n            }\n          })\n        }\n      }\n    )\n\n    // eslint-disable-next-line consistent-return\n    return (): void => {\n      if (animationFrame) {\n        cancelAnimationFrame(animationFrame)\n      }\n      if (cleanupCallback) {\n        cleanupCallback()\n      }\n    }\n  }, [image])\n\n  // useLayoutEffect is ran before React commits to the DOM. This allows us to make sure our HTML is using our cached image version\n  useLayoutEffect(() => {\n    if (imageCache.has(cacheKey) && renderImage) {\n      root.current.innerHTML = renderImage({\n        isLoading: imageCache.has(cacheKey),\n        isLoaded: imageCache.has(cacheKey),\n        image,\n        ...props,\n      })\n\n      // Trigger onStartload and onLoad events\n      onStartLoad?.({\n        wasCached: true,\n      })\n      onLoad?.({\n        wasCached: true,\n      })\n    }\n  }, [image])\n\n  // By keeping all props equal React will keep the component in the DOM\n  return createElement(as, {\n    ...wrapperProps,\n    style: {\n      ...wStyle,\n      ...style,\n      backgroundColor,\n    },\n    className: `${wClass}${className ? ` ${className}` : ``}`,\n    ref: root,\n    dangerouslySetInnerHTML: {\n      __html: sizer,\n    },\n    suppressHydrationWarning: true,\n  })\n}\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> = memo(\n  function GatsbyImage(props) {\n    if (!props.image) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(`[gatsby-plugin-image] Missing image prop`)\n      }\n\n      return null\n    }\n\n    if (!gatsbyImageIsInstalled() && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `[gatsby-plugin-image] You're missing out on some cool performance features. Please add \"gatsby-plugin-image\" to your gatsby-config.js`\n      )\n    }\n\n    return createElement(GatsbyImageHydrator, props)\n  }\n)\n\nGatsbyImage.propTypes = propTypes\nGatsbyImage.displayName = `GatsbyImage`\n","import React, { FunctionComponent, ReactElement } from \"react\"\nimport {\n  altValidator,\n  GatsbyImage as GatsbyImageServer,\n} from \"./gatsby-image.server\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport PropTypes from \"prop-types\"\nimport { ISharpGatsbyImageArgs } from \"../image-utils\"\n\nexport interface IStaticImageProps\n  extends Omit<GatsbyImageProps, \"image\">,\n    Omit<ISharpGatsbyImageArgs, \"backgroundColor\"> {\n  src: string\n  filename?: string\n}\n\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nexport function _getStaticImage(\n  GatsbyImage: FunctionComponent<GatsbyImageProps>\n): React.FC<IStaticImageProps & IPrivateProps> {\n  return function StaticImage({\n    src,\n    __imageData: imageData,\n    __error,\n    // We extract these because they're not meant to be passed-down to GatsbyImage\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    width,\n    height,\n    aspectRatio,\n    tracedSVGOptions,\n    placeholder,\n    formats,\n    quality,\n    transformOptions,\n    jpgOptions,\n    pngOptions,\n    webpOptions,\n    avifOptions,\n    blurredOptions,\n    breakpoints,\n    outputPixelDensities,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ...props\n  }): ReactElement {\n    if (__error) {\n      console.warn(__error)\n    }\n\n    if (imageData) {\n      return <GatsbyImage image={imageData} {...props} />\n    }\n    console.warn(`Image not loaded`, src)\n    if (!__error && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `Please ensure that \"gatsby-plugin-image\" is included in the plugins array in gatsby-config.js, and that your version of gatsby is at least 2.24.78`\n      )\n    }\n    return null\n  }\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageServer)\n\nconst checkDimensionProps: PropTypes.Validator<number> = (\n  props: IStaticImageProps & IPrivateProps,\n  propName: keyof IStaticImageProps & IPrivateProps,\n  ...rest\n) => {\n  if (\n    props.layout === `fullWidth` &&\n    (propName === `width` || propName === `height`) &&\n    props[propName]\n  ) {\n    return new Error(\n      `\"${propName}\" ${props[propName]} may not be passed when layout is fullWidth.`\n    )\n  }\n  return PropTypes.number(props, propName, ...rest)\n}\n\nconst validLayouts = new Set([`fixed`, `fullWidth`, `constrained`])\n\nexport const propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: altValidator,\n  width: checkDimensionProps,\n  height: checkDimensionProps,\n  sizes: PropTypes.string,\n  layout: (props: IStaticImageProps & IPrivateProps): Error | undefined => {\n    if (props.layout === undefined) {\n      return undefined\n    }\n    if (validLayouts.has(props.layout)) {\n      return undefined\n    }\n\n    return new Error(\n      `Invalid value ${props.layout}\" provided for prop \"layout\". Defaulting to \"constrained\". Valid values are \"fixed\", \"fullWidth\" or \"constrained\".`\n    )\n  },\n}\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import {\n  GatsbyImage as GatsbyImageBrowser,\n  IGatsbyImageData,\n} from \"./gatsby-image.browser\"\nimport React from \"react\"\nimport {\n  _getStaticImage,\n  propTypes,\n  IStaticImageProps,\n} from \"./static-image.server\"\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageBrowser)\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","\n(function(){if(\"undefined\"!==typeof window&&void 0!==window.Reflect&&void 0!==window.customElements){var a=HTMLElement;window.HTMLElement=function(){return Reflect.construct(a,[],this.constructor)};HTMLElement.prototype=a.prototype;HTMLElement.prototype.constructor=HTMLElement;Object.setPrototypeOf(HTMLElement,a)}})();\nexport * from '../esm/polyfills/index.js';\nexport * from '../esm/loader.js';\n","// extracted by mini-css-extract-plugin\nexport var darkMode = \"layout-module--dark-mode--75529\";\nexport var globalContainer = \"layout-module--global-container--5b4b1\";\nexport var globalWrapper = \"layout-module--global-wrapper--2a623\";\nexport var sub = \"layout-module--sub--63c8b\";","import { useCallback, useSyncExternalStore } from \"react\";\n\nexport const createStore = (initialState) => {\n  let state = initialState;\n\n  const getState = () => state;\n\n  const listeners = new Set();\n\n  const setState = (fn) => {\n    state = fn(state);\n    listeners.forEach((listener) => listener());\n  };\n\n  const subscribe = (listener) => {\n    listeners.add(listener);\n    return () => listeners.delete(listener);\n  };\n\n  return { getState, setState, subscribe };\n};\n\nexport const useStore = (store, selector) => {\n  const slice = useSyncExternalStore(\n    store.subscribe,\n    useCallback(() => selector(store.getState()), [store, selector]),\n  );\n\n  return [slice, store.setState];\n};\n\nexport const useValueStore = (store, selector) => {\n  const slice = useSyncExternalStore(\n    store.subscribe,\n    useCallback(() => selector(store.getState()), [store, selector]),\n  );\n\n  return slice;\n};\n\nexport const useSetStore = (store) => {\n  return store.setState;\n};\n","import { createStore } from \".\";\n\nexport const darkModeStore = createStore(false);\n","import { p as promiseResolve, b as bootstrapLazy } from './index-55dc676f.js';\n\n/*\n Stencil Client Patch Esm v2.11.0 | MIT Licensed | https://stenciljs.com\n */\nconst patchEsm = () => {\n    return promiseResolve();\n};\n\nconst defineCustomElements = (win, options) => {\n  if (typeof window === 'undefined') return Promise.resolve();\n  return patchEsm().then(() => {\n  return bootstrapLazy([[\"deckgo-highlight-code\",[[1,\"deckgo-highlight-code\",{\"language\":[513],\"highlightLines\":[513,\"highlight-lines\"],\"lineNumbers\":[516,\"line-numbers\"],\"terminal\":[513],\"editable\":[4],\"theme\":[513],\"revealProgress\":[1025,\"reveal-progress\"],\"themeStyle\":[32],\"loaded\":[32],\"highlightRows\":[32],\"load\":[64],\"reveal\":[64],\"hide\":[64],\"revealAll\":[64],\"hideAll\":[64],\"nextHighlight\":[64],\"prevHighlight\":[64]},[[5,\"prismLanguageLoaded\",\"onLanguageLoaded\"],[5,\"prismLanguageError\",\"onLanguageError\"],[8,\"copy\",\"onCopyCleanZeroWidthSpaces\"]]]]]], options);\n  });\n};\n\nexport { defineCustomElements };\n","import * as React from \"react\";\nimport { Link } from \"gatsby\";\nimport { StaticImage } from \"gatsby-plugin-image\";\nimport { defineCustomElements as deckDeckGoHighlightElement } from \"@deckdeckgo/highlight-code/dist/loader\";\nimport * as styles from \"./layout.module.scss\";\nimport { darkModeStore } from \"../store/dark-mode\";\nimport { useStore } from \"../store\";\n\ndeckDeckGoHighlightElement();\n\n/**\n * @param {Object} props\n * @param {object} props.children\n * @param {string} props.title\n */\nexport default function Layout({ children, title }) {\n  const [darkMode, setDarkMode]  = useStore(darkModeStore, (state) => state);\n\n  const onClick = () => {\n    setDarkMode(!darkMode);\n  };\n\n  return (\n    <React.Fragment>\n      <div className={styles[\"globalContainer\"]}>\n        <div className={styles[\"globalWrapper\"]}>\n          <header>\n            <Link to=\"/\">\n              <h3>{title}</h3>\n            </Link>\n            <div className={styles[\"sub\"]}>\n              <Link target=\"blank\" to=\"https://github.com/dkpark10\">\n                <StaticImage\n                  width={32}\n                  height={32}\n                  src=\"../images/github-icon.png\"\n                  alt=\"https://github.com/dkpark10 주소\"\n                />\n              </Link>\n              {/* <button className={styles[\"darkMode\"]} onClick={onClick}>\n                다크모드\n              </button> */}\n            </div>\n          </header>\n          <hr />\n          <main>{children}</main>\n        </div>\n      </div>\n      <footer />\n    </React.Fragment>\n  );\n}\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, title, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata?.social?.twitter || ``}\n      />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n"],"names":["scopeId","hostTagName","isSvgMode","queuePending","win","window","doc","document","head","plt","$flags$","$resourcesUrl$","jmp","h","raf","requestAnimationFrame","ael","el","eventName","listener","opts","addEventListener","rel","removeEventListener","ce","CustomEvent","promiseResolve","v","Promise","resolve","supportsConstructibleStylesheets","CSSStyleSheet","replace","e","addHostEventListeners","elm","hostRef","listeners","attachParentListeners","map","flags","name","method","target","getHostListenerTarget","handler","hostListenerProxy","hostListenerOpts","$rmListeners$","push","methodName","ev","$lazyInstance$","$queuedListeners$","consoleError","XLINK_NS","rootAppliedStyles","WeakMap","attachStyles","cmpMeta","$cmpMeta$","$hostElement$","endAttachStyles","$tagName$","styleContainerNode","mode","hostElm","getScopeId","style","styles","get","nodeType","styleElm","appliedStyles","set","Set","has","createElement","innerHTML","insertBefore","querySelector","add","adoptedStyleSheets","includes","addStyle","shadowRoot","getRootNode","classList","cmp","EMPTY_OBJ","isComplexType","o","nodeName","vnodeData","children","child","key","simple","lastSimple","vNodeChildren","walk","c","i","length","Array","isArray","String","$text$","newVNode","classData","className","class","Object","keys","filter","k","join","vdomFnUtils","vnode","$attrs$","$children$","$key$","tag","text","$tag$","$elm$","Host","forEach","cb","convertToPublic","convertToPrivate","node","vattrs","vchildren","vkey","vname","$name$","vtag","vtext","assign","setAccessor","memberName","oldValue","newValue","isSvg","isProp","isMemberInElement","ln","toLowerCase","oldClasses","parseClassList","newClasses","remove","prop","removeProperty","setProperty","isComplex","tagName","n","xlink","getAttribute","removeAttributeNS","removeAttribute","setAttributeNS","setAttribute","slice","parseClassListRegex","value","split","updateElement","oldVnode","newVnode","host","oldVnodeAttrs","newVnodeAttrs","undefined","createElm","oldParentVNode","newParentVNode","childIndex","parentElm","childNode","createTextNode","appendChild","addVnodes","before","parentVNode","vnodes","startIdx","endIdx","containerElm","removeVnodes","callNodeRefs","isSameVnode","vnode1","vnode2","patch","oldVNode","oldChildren","newChildren","oldCh","newCh","elmToMove","oldStartIdx","newStartIdx","idxInOld","oldEndIdx","oldStartVnode","oldEndVnode","newEndIdx","newStartVnode","newEndVnode","nextSibling","parentNode","updateChildren","textContent","data","vNode","ref","renderVdom","renderFnResults","$vnode$","rootVnode","$attrsToReflect$","propName","attribute","getElement","getHostRef","createEvent","emit","detail","emitEvent","bubbles","composed","cancelable","dispatchEvent","attachToAncestor","ancestorComponent","$onRenderResolve$","r","scheduleUpdate","isInitialLoad","$ancestorComponent$","writeTask","dispatchHooks","endSchedule","instance","promise","event","safeCall","then","updateComponent","async","endUpdate","rc","endRender","callRender","childrenPromises","postUpdate","postUpdateComponent","all","render","endPostUpdate","addHydratedFlag","$onReadyResolve$","appDidLoad","$onInstanceResolve$","nextTick","who","documentElement","namespace","arg","thenFn","setValue","newVal","oldVal","$instanceValues$","propValue","propType","$members$","$watchers$","watchMethods","watchMethodName","proxyComponent","Cstr","watchers","members","entries","prototype","memberFlags","defineProperty","this","configurable","enumerable","args","$onInstancePromise$","attrNameToPropName","Map","attributeChangedCallback","attrName","_oldValue","hasOwnProperty","observedAttributes","_","m","initializeComponent","hmrVersionId","loadModule","endLoad","isProxied","endNewInstance","endRegisterStyles","cssText","allowCS","registerStyle","schedule","bootstrapLazy","lazyBundles","options","endBootstrap","cmpTags","exclude","customElements","metaCharset","visibilityStyle","deferredConnectedCallbacks","appLoadFallback","isBootstrapping","URL","resourcesUrl","baseURI","href","lazyBundle","compactMeta","$listeners$","HostElement","HTMLElement","constructor","self","super","registerHost","attachShadow","connectedCallback","clearTimeout","endConnected","disconnectedCallback","rmListener","componentOnReady","$onReadyPromise$","$lazyBundleId$","define","firstChild","setTimeout","hostRefs","registerInstance","lazyInstance","console","error","cmpModules","exportName","bundleId","module","importedModule","queueDomReads","queueDomWrites","queueTask","queue","write","flush","consume","performance","now","webpackAsyncContext","req","__webpack_require__","Error","code","ids","id","exports","UPPERCASE","LOWERCASE","LEADING_CAPITAL","IDENTIFIER","SEPARATORS","LEADING_SEPARATORS","RegExp","source","SEPARATORS_AND_IDENTIFIER","NUMBERS_AND_IDENTIFIER","camelCase","input","TypeError","pascalCase","preserveConsecutiveUppercase","x","trim","locale","string","toLocaleLowerCase","toUpperCase","toLocaleUpperCase","isLastCharLower","isLastCharUpper","isLastLastCharUpper","character","test","preserveCamelCase","lastIndex","m1","charAt","identifier","postProcess","W","hasNativeLazyLoadSupport","HTMLImageElement","z","t","a","s","width","height","P","loading","shouldLoad","opacity","A","l","backgroundColor","position","top","left","bottom","right","objectFit","objectPosition","d","transition","H","F","_ref5","layout","paddingTop","maxWidth","display","alt","role","src","G","u","V","B","U","srcSet","decoding","Y","fallback","sources","sizes","_ref6","media","type","X","propTypes","isRequired","displayName","J","Z","K","Q","ee","te","ae","_len","arguments","_key","apply","concat","ie","image","se","re","ne","oe","le","de","as","g","onStartLoad","p","onLoad","onError","f","w","y","b","E","S","M","N","$","JSON","stringify","images","I","_ref7","renderImageToString","swapPlaceholderImage","current","complete","wasCached","_ref8","isLoading","isLoaded","cancelAnimationFrame","dangerouslySetInnerHTML","__html","suppressHydrationWarning","he","ue","__imageData","__error","warn","ge","imgClassName","imgStyle","placeholder","pe","_len2","_key2","me","fe","we","Reflect","construct","setPrototypeOf","globalContainer","globalWrapper","sub","useStore","store","selector","useSyncExternalStore","subscribe","useCallback","getState","setState","darkModeStore","initialState","state","fn","delete","createStore","Layout","_ref","title","darkMode","setDarkMode","React","Link","to","StaticImage","require","_site$siteMetadata","_site$siteMetadata2","_site$siteMetadata2$s","description","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","content","property","social","twitter"],"sourceRoot":""}